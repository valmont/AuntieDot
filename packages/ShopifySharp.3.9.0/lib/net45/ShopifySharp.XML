<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ShopifySharp</name>
    </assembly>
    <members>
        <member name="T:ShopifySharp.Converters.FalseToNullConverter">
            <summary>
            A custom boolean converter that converts False to null and null to False.
            </summary>
        </member>
        <member name="T:ShopifySharp.Converters.NullableEnumConverter`1">
            <summary>
            A custom enum converter for all enums which returns the value 
            as null when the value is null or does not exist.
            </summary>
        </member>
        <member name="T:ShopifySharp.Converters.NullToZeroConverter">
            <summary>
            A custom integer converter that converts null to zero 
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyDiscount.DiscountType">
            <summary>
            Specify how the discount's value will be applied to the order. Valid values are:
            fixed_amount: The value as a unit of the store's currency will be discounted. E.g. If value is 30 and store's currency is USD, then $30 is deducted.
            percentage: The percent amount to discount the order, e.g. 15% off.
            shipping: Applies a free shipping discount on orders that have a shipping rate less than or equal to the amount specified in the value property.For example, free shipping for any shipping rate that is less than or equal to $70.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyDiscount.DiscountCode">
            <summary>
            The case-insensitive discount code that customers use at checkout. Required when creating a discount.Maximum length of 255 characters.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyDiscount.Value">
            <summary>
            The value of the discount. Required when creating a percentage-based or fixed-amount discount. See the discount_type property to learn more about how value is interpreted.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyDiscount.EndsAt">
            <summary>
            The date when the discount code becomes disabled in ISO 8601 format.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyDiscount.StartsAt">
            <summary>
            The date the discount becomes valid for use during checkout in ISO 8601 format.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyDiscount.Status">
            <summary>
            The status of the discount code. Valid values are enabled, disabled, or depleted.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyDiscount.MinimumOrderAmount">
            <summary>
            The minimum value an order must reach for the discount to be allowed during checkout.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyDiscount.UsageLimit">
            <summary>
            The number of times this discount code can be redeemed. It can be redeemed by one or many customers; the usage_limit is a store-wide absolute value. Leave blank for unlimited uses.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyDiscount.AppliesToId">
            <summary>
            The id of a collection or product that this discount code is restricted to. Leave blank for a store-wide discount. If applies_to_id is set, then the applies_to_resource property is also mandatory.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyDiscount.AppliesOnce">
            <summary>
            When a discount applies to a product or collection resource, applies_once determines whether the discount should be applied once per order, or to every applicable item in the cart.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyDiscount.AppliesOncePerCustomer">
            <summary>
            Determines whether the discount should be applied once, or any number of times per customer.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyDiscount.AppliesToResource">
            <summary>
            The discount code can be set to apply to only a product, smart_collection, customersavedsearch or custom_collection.If applies_to_resource is set, then applies_to_id should also be set.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyDiscount.TimesUsed">
            <summary>
            Returns a count of successful checkouts where the discount code has been used.Cannot exceed the usage_limit property.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyApplicationCredit">
            <summary>
            An object representing Shopify's ApplicationCredit object, which can be used to offer credits for payments made via the Application Charge, Recurring Application Charge, and Usage Charge APIs.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyApplicationCredit.Description">
            <summary>
            The description of the application credit.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyApplicationCredit.Amount">
            <summary>
            The amount refunded by the application credit.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyApplicationCredit.Test">
            <summary>
            States whether or not the application credit is a test transaction. Valid values are true or null.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyArticle">
            <summary>
            An object representing a Shopify blog article.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyArticle.Author">
            <summary>
            The name of the author of this article
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyArticle.BlogId">
            <summary>
            A unique numeric identifier for the blog containing the article.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyArticle.BodyHtml">
            <summary>
            The text of the body of the article, complete with HTML markup.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyArticle.CreatedAt">
            <summary>
            The date and time when the article was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyArticle.Handle">
            <summary>
            A human-friendly unique string for an article automatically generated from its title. It is used in the article's URL.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyArticle.Image">
            <summary>
            The article image.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyArticle.Published">
            <summary>
            States whether or not the article is visible. 
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyArticle.PublishedAt">
            <summary>
            The date and time when the article was published. 
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyArticle.SummaryHtml">
            <summary>
            The text of the summary of the article, complete with HTML markup.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyArticle.Tags">
            <summary>
            Tags are additional short descriptors formatted as a string of comma-separated values. For example, if an article has three tags: tag1, tag2, tag3.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyArticle.TemplateSuffix">
            <summary>
            States the name of the template an article is using if it is using an alternate template. If an article is using the default article.liquid template, the value returned is null.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyArticle.Title">
            <summary>
            The title of the article.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyArticle.UpdatedAt">
            <summary>
            The date and time when the article was last updated.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyArticle.UserId">
            <summary>
            A unique numeric identifier for the author of the article.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyArticleImage">
            <summary>
            Represents a Shopify article's image.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyArticleImage.Attachment">
            <summary>
            A base64 image string only used when creating an image. It will be converted to the <see cref="P:ShopifySharp.ShopifyArticleImage.Src"/> property.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyArticleImage.CreatedAt">
            <summary>
            The date and time the image was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyArticleImage.Src">
            <summary>
            The image's src URL.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyAsset">
            <summary>
            An object representing a Shopify asset. Assets do not have ids, but rather keys, and are associated with specific themes.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyAsset.Attachment">
            <summary>
            An asset attached to a store's theme.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyAsset.ContentType">
            <summary>
            MIME representation of the content, consisting of the type and subtype of the asset, 
            e.g. "image/gif"
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyAsset.CreatedAt">
            <summary>
            The date and time when the asset was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyAsset.Key">
            <summary>
            The path to the asset within a shop, prefixed with the asset's 'bucket' type,
             e.g. 'templates/index.liquid' or 'assets/bg-body.gif'.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyAsset.PublicUrl">
            <summary>
            The public facing URL of the asset.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyAsset.Size">
            <summary>
            The asset size in bytes.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyAsset.SourceKey">
            <summary>
            When set in an asset and used in <see cref="M:ShopifySharp.ShopifyAssetService.CreateOrUpdateAsync(System.Int64,ShopifySharp.ShopifyAsset)"/>, 
            a new asset will be created and copied from an asset with the key matching this source key.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyAsset.Src">
            <summary>
            Specifies the location of an asset.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyAsset.ThemeId">
            <summary>
            A unique numeric identifier for the theme.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyAsset.UpdatedAt">
            <summary>
            The date and time when an asset was last updated. 
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyAsset.Value">
            <summary>
            The asset that you are adding.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyBlog">
            <summary>
            Represents a Blog — not a blog post — on a merchant's Shopify store.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyBlog.Commentable">
            <summary>
            Indicates whether readers can post comments to the blog and if comments are moderated or not. Possible values are:
            "no" (default): Readers cannot post comments to blog articles.
            "moderate": Readers can post comments to blog articles, but comments must be moderated before they appear.
            "yes": Readers can post comments to blog articles without moderation.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyBlog.CreatedAt">
            <summary>
            The date and time when the blog was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyBlog.Feedburner">
            <summary>
            Feedburner is a web feed management provider and can be enabled to provide custom RSS feeds for Shopify bloggers. This property will default to blank or "null" unless feedburner is enabled through the shop admin.
            </summary>
            <remarks>
            Shopify does not document the value type for this property.
            </remarks>
        </member>
        <member name="P:ShopifySharp.ShopifyBlog.FeedburnerLocation">
            <summary>
            URL to the feedburner location for blogs that have enabled feedburner through their store admin.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyBlog.Handle">
            <summary>
            A human-friendly unique string for a blog automatically generated from its title. This handle is used by the Liquid templating language to refer to the blog.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyBlog.Tags">
            <summary>
            Tags are additional short descriptors formatted as a string of comma-separated values. For example, if an article has three tags: tag1, tag2, tag3.
            </summary>
            <remarks>
            Shopify seems to ignore these tags when creating or updating a blog.
            </remarks>
        </member>
        <member name="P:ShopifySharp.ShopifyBlog.TemplateSuffix">
            <summary>
            States the name of the template a blog is using if it is using an alternate template. If a blog is using the default blog.liquid template, the value returned is "null".
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyBlog.Title">
            <summary>
            The title of the blog.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyBlog.UpdatedAt">
            <summary>
            The date and time when changes were last made to the blog's properties. Note that this is not updated when creating, modifying or deleting articles in the blog.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyCharge">
            <summary>
            An object representing an application charge.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCharge.ConfirmationUrl">
            <summary>
            The URL that the customer should be sent to, to accept or decline the application charge.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCharge.CreatedAt">
            <summary>
            The date and time when the application charge was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCharge.Name">
            <summary>
            The name of the application charge.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCharge.Price">
            <summary>
            The price of the application charge.
            </summary>
            <remarks>Shopify returns this as a string, but JSON.net should be able to convert it to a double.</remarks>
        </member>
        <member name="P:ShopifySharp.ShopifyCharge.ReturnUrl">
            <summary>
            The URL the customer is sent to once they accept/decline a charge.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCharge.Status">
            <summary>
            The status of the charged. Known values are 'pending', 'accepted', 'active', 'cancelled', 'declined' and 'expired'.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCharge.Test">
            <summary>
            States whether or not the application charge is a test transaction.
            </summary>
            <remarks>Valid values are 'true' or null. Needs a special converter to convert null to false and vice-versa.</remarks>
        </member>
        <member name="P:ShopifySharp.ShopifyCharge.UpdatedAt">
            <summary>
            The date and time when the recurring application charge was last updated.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyClientDetails.AcceptLanguage">
            <summary>
            Shopify does not offer documentation for this field.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyClientDetails.BrowserHeight">
            <summary>
            The browser screen height in pixels, if available.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyClientDetails.BrowserIp">
            <summary>
            The browser IP address.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyClientDetails.BrowserWidth">
            <summary>
            The browser screen width in pixels, if available.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyClientDetails.SessionHeight">
            <summary>
            Obsolete: This property is incorrect and will be removed in a future release.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyClientDetails.SessionHash">
            <summary>
            A hash of the session.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyClientDetails.UserAgent">
            <summary>
            The browser's user agent string.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyCollect">
            <summary>
            An object representing a Shopify collect.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCollect.CollectionId">
            <summary>
            The id of the custom collection containing the product.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCollect.ProductId">
            <summary>
            The unique numeric identifier for the product in the custom collection.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCollect.Featured">
            <summary>
            States whether or not the collect is featured.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCollect.CreatedAt">
            <summary>
            The date and time when the collect was created. The API returns this value in ISO 8601 format.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCollect.UpdatedAt">
            <summary>
            The date and time when the collect was last updated. The API returns this value in ISO 8601 format.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCollect.Position">
            <summary>
            A number specifying the manually sorted position of this product in a custom collection. The first position is 1. This value only applies when the custom collection is viewed using the Manual sort order.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCollect.SortValue">
            <summary>
            This is the same value as position but padded with leading zeroes to make it alphanumeric-sortable.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyCustomCollection">
            <summary>
            An entity representing a Shopify Custom Collection Object.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomCollection.BodyHtml">
            <summary>
            The description of the Custom collection, complete with HTML markup. Many templates display this on their Custom collection page.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomCollection.Handle">
            <summary>
            A human-friendly unique string for the Custom collection automatically generated from its title. This is used in shop themes by the Liquid templating language to refer to the Custom collection. Limit of 255 characters.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomCollection.Image">
            <summary>
            The collection image.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomCollection.Published">
            <summary>
            The collection image.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomCollection.PublishedAt">
            <summary>
            This can have two different types of values, depending on whether the Custom collection has been published (i.e., made visible to customers):
            If the Custom collection is published, this value is the date and time when it was published.The API returns this value in ISO 8601 format.
            If the Custom collection is hidden (i.e., not published), this value is null. Changing a Custom collection's status from published to hidden changes its published_at property to null.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomCollection.PublishedScope">
            <summary>
            The sales channels in which the Custom collection is visible.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomCollection.MetaField">
            <summary>
            Attaches additional metadata to a shop's resources:      
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomCollection.SortOrder">
            <summary>
            The order in which products in the Custom collection appear
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomCollection.TemplateSuffix">
            <summary>
            The suffix of the template you are using. By default, the original template is called product.liquid, without any suffix. Any additional templates will be: product.suffix.liquid.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomCollection.Title">
            <summary>
            The name of the Custom collection. Limit of 255 characters.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomCollection.UpdatedAt">
            <summary>
            The date and time when the Custom collection was last modified. The API returns this value in ISO 8601 format.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomCollection.Collects">
            <summary>
            The collection of collects associated to this custom collection
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyCustomCollectionImage">
            <summary>
            Represents the image for a <see cref="T:ShopifySharp.ShopifyCustomCollection"/>
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomCollectionImage.Attachment">
            <summary>
            An image attached to a shop's theme returned as Base64-encoded binary data.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomCollectionImage.Src">
            <summary>
            Source URL that specifies the location of the image.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomCollectionImage.Created_At">
            <summary>
            The date the image was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyRefundOrderAdjustment.OrderId">
            <summary>
            The unique identifier of the order
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyRefundOrderAdjustment.RefundId">
            <summary>
            The unique identifier of the refund
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyRefundOrderAdjustment.Amount">
            <summary>
            The amount refunded (it is negative and does not include tax).
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyRefundOrderAdjustment.TaxAmount">
            <summary>
            The tax amount refunded (negative).
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyRefundOrderAdjustment.Kind">
            <summary>
            The type of adjustment. Values include "refund_discrepancy", "shipping_refund"
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyRefundOrderAdjustment.Reason">
            <summary>
            Reason for the refund
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyRefundLineItem.LineItem">
            <summary>
            The single <see cref="T:ShopifySharp.ShopifyLineItem"/> being returned.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyRefundLineItem.LineItemId">
            <summary>
            The unique identifier of the refund line item.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyRefundLineItem.Quantity">
            <summary>
            The quantity of the associated line item that was returned.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyRefundLineItem.TotalTax">
            <summary>
            Tax amount refunded
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyRefundLineItem.SubTotal">
            <summary>
            Item subtotal
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyRefund.CreatedAt">
            <summary>
            The date and time when the refund was created. 
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyRefund.OrderAdjustments">
            <summary>
            The list of <see cref="T:ShopifySharp.ShopifyRefundOrderAdjustment"/> objects
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyRefund.ProcessedAt">
            <summary>
            The date and time when the refund was imported.
            </summary>
            <remarks>
            This value can be set to dates in the past when importing from other systems. If no value is provided, it will be auto-generated.
            </remarks>
        </member>
        <member name="P:ShopifySharp.ShopifyRefund.Note">
            <summary>
            The optional note attached to a refund.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyRefund.RefundLineItems">
            <summary>
            The list of <see cref="T:ShopifySharp.ShopifyRefundLineItem"/> objects
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyRefund.Restock">
            <summary>
            Whether or not the line items were added back to the store inventory.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyRefund.Transactions">
            <summary>
            The list of <see cref="T:ShopifySharp.ShopifyTransaction"/> objects
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyRefund.UserId">
            <summary>
            The unique identifier of the user who performed the refund.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyEvent">
            <summary>
            An object representing a Shopify event.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyEvent.Arguments">
            <summary>
            Refers to a certain event and its resources.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyEvent.Body">
            <summary>
            A text field containing information about the event.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyEvent.CreatedAt">
            <summary>
            The date and time when the event was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyEvent.Path">
            <summary>
            A relative URL to the resource the event is for (may be null)
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyEvent.Message">
            <summary>
            Human readable text that describes the event (may contain limited HTML formatting).
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyEvent.SubjectId">
            <summary>
            The id of the resource that generated the event.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyEvent.SubjectType">
            <summary>
            The type of the resource that generated the event.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyEvent.Verb">
            <summary>
            The type of event that took place.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyEvent.Author">
            <summary>
            Undocumented by Shopify
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyLineItemProperty">
            <summary>
            An object representing a properties for <see cref="P:ShopifySharp.ShopifyLineItem.Properties"/>
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyLineItemProperty.Name">
            <summary>
            The name of the note attribute.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyLineItemProperty.Value">
            <summary>
            The value of the note attribute.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyLocation">
            <summary>
            An object representing a physical store location.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyLocation.Name">
            <summary>
            The name of the location.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyLocation.Address1">
            <summary>
            The first line of the address.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyLocation.Address2">
            <summary>
            The second line of the address.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyLocation.Zip">
            <summary>
            The zip or postal code.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyLocation.City">
            <summary>
            The city the location is in.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyLocation.Province">
            <summary>
            The province the location is in.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyLocation.Country">
            <summary>
            The country the location is in.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyLocation.CountryName">
            <summary>
            The name of the country the location is in.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyLocation.Phone">
            <summary>
            The phone number of the location. Can contain special chars like - and +.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyLocation.CreatedAt">
            <summary>
            The date and time when the location was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyLocation.UpdatedAt">
            <summary>
            The date and time when the location was last updated.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyNoteAttribute">
            <summary>
            An object representing a note attribute for <see cref="P:ShopifySharp.ShopifyOrder.NoteAttributes"/>
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyNoteAttribute.Name">
            <summary>
            The name of the note attribute.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyNoteAttribute.Value">
            <summary>
            The value of the note attribute.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyOrderRisk">
            <summary>
            An object representing a Shopify order risk.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrderRisk.CauseCancel">
            <summary>
            Use this flag when a fraud check is accompanied with a call to the Orders API to cancel the order. This will indicate to the merchant that this risk was severe enough to force cancellation of the order.
            Note: Setting this parameter does not cancel the order. This must be done by the Orders API.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrderRisk.CheckoutId">
            <summary>
            WARNING: This is an undocumented value returned by the Shopify API. Use at your own risk.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrderRisk.Display">
            <summary>
            States whether or not the risk is displayed. Valid values are "true" or "false".
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrderRisk.OrderId">
            <summary>
            The id of the order the order risk belongs to
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrderRisk.Message">
            <summary>
            A message that should be displayed to the merchant to indicate the results of the fraud check.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrderRisk.MerchantMessage">
            <summary>
            WARNING: This is an undocumented field returned by the Shopify API. Use at your own risk. This value cannot be set via API. This message is shown in the merchant's admin dashboard if different from <see cref="P:ShopifySharp.ShopifyOrderRisk.Message" />.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrderRisk.Recommendation">
            <summary>
            The recommended action given to the merchant. Known values are 'cancel', 'investigate' and 'accept'.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrderRisk.Score">
            <summary>
            A number between 0 and 1 indicating percentage likelihood of being fraud.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrderRisk.Source">
            <summary>
            This indicates the source of the risk assessment. Known values are 'External', 'Internal' and 'Gateway'.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyPage">
            <summary>
            An entity representing a Shopify product.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyPage.Title">
            <summary>
            The name of the page. 
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyPage.BodyHtml">
            <summary>
            The content of the page, complete with HTML formatting.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyPage.CreatedAt">
            <summary>
            The date and time when the page was created. The API returns this value in ISO 8601 format.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyPage.UpdatedAt">
            <summary>
            The date and time when the page was last modified. The API returns this value in ISO 8601 format.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyPage.PublishedAt">
            <summary>
            The date and time when the page was published. The API returns this value in ISO 8601 format. 
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyPage.Handle">
            <summary>
            A human-friendly unique string for the page automatically generated from its title.
            They are used by the Liquid templating language to refer to objects.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyPage.TemplateSuffix">
            <summary>
            The suffix of the liquid template being used.
            By default, the original template is called product.liquid, without any suffix.
            Any additional templates will be: product.suffix.liquid.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyPage.Metafields">
            <summary>
            Attaches additional information to a shop's resources.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyProduct">
            <summary>
            An entity representing a Shopify product.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProduct.Title">
            <summary>
            The name of the product. In a shop's catalog, clicking on a product's title takes you to that product's page.
            On a product's page, the product's title typically appears in a large font.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProduct.BodyHtml">
            <summary>
            The description of the product, complete with HTML formatting.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProduct.CreatedAt">
            <summary>
            The date and time when the product was created. The API returns this value in ISO 8601 format.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProduct.UpdatedAt">
            <summary>
            The date and time when the product was last modified. The API returns this value in ISO 8601 format.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProduct.PublishedAt">
            <summary>
            The date and time when the product was published. The API returns this value in ISO 8601 format. 
            Set to NULL to unpublish a product
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProduct.Vendor">
            <summary>
            The name of the vendor of the product.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProduct.ProductType">
            <summary>
            A categorization that a product can be tagged with, commonly used for filtering and searching.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProduct.Handle">
            <summary>
            A human-friendly unique string for the Product automatically generated from its title.
            They are used by the Liquid templating language to refer to objects.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProduct.TemplateSuffix">
            <summary>
            The suffix of the liquid template being used.
            By default, the original template is called product.liquid, without any suffix.
            Any additional templates will be: product.suffix.liquid.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProduct.PublishedScope">
            <summary>
            The sales channels in which the product is visible.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProduct.Tags">
            <summary>
            A categorization that a product can be tagged with, commonly used for filtering and searching.
            Each comma-separated tag has a character limit of 255.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProduct.Variants">
            <summary>
            A list of variant objects, each one representing a slightly different version of the product.
            For example, if a product comes in different sizes and colors, each size and color permutation (such as "small black", "medium black", "large blue"), would be a variant.
            To reorder variants, update the product with the variants in the desired order.The position attribute on the variant will be ignored.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProduct.Options">
            <summary>
            Custom product property names like "Size", "Color", and "Material".
            Products are based on permutations of these options. 
            A product may have a maximum of 3 options. 255 characters limit each.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProduct.Images">
            <summary>
            A list of image objects, each one representing an image associated with the product.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProduct.Metafields">
            <summary>
            Attaches additional information to a shop's resources.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyDiscountCode.Amount">
            <summary>
            The amount of the discount.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyDiscountCode.Code">
            <summary>
            The discount code.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyDiscountCode.Type">
            <summary>
            The type of discount. Known values are 'percentage', 'shipping', 'fixed_amount' and 'none'.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyFulfillment">
            <summary>
            An object representing a Shopify fulfillment.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyFulfillment.CreatedAt">
            <summary>
            The date and time when the fulfillment was created. 
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyFulfillment.LineItems">
            <summary>
            A historical record of each item in the fulfillment.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyFulfillment.OrderId">
            <summary>
            The unique numeric identifier for the order.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyFulfillment.Receipt">
            <summary>
            A textfield with information about the receipt.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyFulfillment.Status">
            <summary>
            The status of the fulfillment. Valid values are 'pending', 'open', 'success', 'cancelled', 
            'error' and 'failure'.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyFulfillment.TrackingCompany">
            <summary>
            The name of the shipping company.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyFulfillment.TrackingNumber">
            <summary>
            The shipping number, provided by the shipping company. If multiple tracking numbers
            exist (<see cref="P:ShopifySharp.ShopifyFulfillment.TrackingNumbers"/>), returns the first number.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyFulfillment.TrackingNumbers">
            <summary>
            A list of shipping numbers, provided by the shipping company. May be null.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyFulfillment.TrackingUrl">
            <summary>
            The tracking url, provided by the shipping company. May be null. If multiple tracking URLs
            exist (<see cref="P:ShopifySharp.ShopifyFulfillment.TrackingUrls"/>), returns the first URL.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyFulfillment.TrackingUrls">
            <summary>
            An array of one or more tracking urls, provided by the shipping company. May be null.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyFulfillment.UpdatedAt">
            <summary>
            The date and time when the fulfillment was last modified.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyLineItem.FulfillableQuantity">
            <summary>
            The amount available to fulfill. This is the quantity - max(refunded_quantity, fulfilled_quantity) - pending_fulfilled_quantity.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyLineItem.FulfillmentService">
            <summary>
            Service provider who is doing the fulfillment. Valid values are either "manual" or the name of the provider. eg: "amazon", "shipwire", etc.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyLineItem.FulfillmentStatus">
            <summary>
            The fulfillment status of this line item. Known values are 'fulfilled', 'null' and 'partial'.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyLineItem.Grams">
            <summary>
            The weight of the item in grams.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyLineItem.Price">
            <summary>
            The price of the item before discounts have been applied.
            </summary>
            <remarks>Shopify returns this value as a string.</remarks>
        </member>
        <member name="P:ShopifySharp.ShopifyLineItem.ProductId">
            <summary>
            The unique numeric identifier for the product in the fulfillment. Can be null if the original product associated with the order is deleted at a later date
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyLineItem.Quantity">
            <summary>
            The number of products that were purchased.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyLineItem.RequiresShipping">
            <summary>
            States whether or not the fulfillment requires shipping.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyLineItem.SKU">
            <summary>
            A unique identifier of the item in the fulfillment.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyLineItem.Title">
            <summary>
            The title of the product.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyLineItem.VariantId">
            <summary>
            The id of the product variant. Can be null if the product purchased is not a variant.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyLineItem.VariantTitle">
            <summary>
            The title of the product variant. Can be null if the product purchased is not a variant.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyLineItem.Name">
            <summary>
            The name of the product variant.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyLineItem.Vendor">
            <summary>
            The name of the supplier of the item.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyLineItem.GiftCard">
            <summary>
            States whether the order used a gift card.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyLineItem.Taxable">
            <summary>
            States whether or not the product was taxable.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyLineItem.TaxLines">
            <summary>
            An array of <see cref="T:ShopifySharp.ShopifyTaxLine"/> objects, each of which details the taxes applicable to this <see cref="T:ShopifySharp.ShopifyLineItem"/>.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyLineItem.TotalDiscount">
            <summary>
            The total discount amount applied to this line item. This value is not subtracted in the line item price.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyLineItem.Properties">
            <summary>
            An array of custom information for an item that has been added to the cart.
            Often used to provide product customization options.
            An array of <see cref="T:ShopifySharp.ShopifyTaxLine"/> objects, each of which details the taxes applicable to this <see cref="T:ShopifySharp.ShopifyLineItem"/>.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyOrder">
            <summary>
            An object representing a Shopify order.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.BillingAddress">
            <summary>
            The mailing address associated with the payment method. This address is an optional field that will not be available on orders that do not require one. 
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.BrowserIp">
            <summary>
            The IP address of the browser used by the customer when placing the order.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.BuyerAcceptsMarketing">
            <summary>
            Indicates whether or not the person who placed the order would like to receive email updates from the shop. 
            This is set when checking the "I want to receive occasional emails about new products, promotions and other news" checkbox during checkout.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.CancelReason">
            <summary>
            The reason why the order was cancelled. If the order was not cancelled, this value is null. Known values are "customer", "fraud", "inventory" and "other".
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.CancelledAt">
            <summary>
            The date and time when the order was cancelled. If the order was not cancelled, this value is null.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.CartToken">
            <summary>
            Unique identifier for a particular cart that is attached to a particular order.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.ClientDetails">
            <summary>
            A <see cref="T:ShopifySharp.ShopifyClientDetails"/> object containing information about the client.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.ClosedAt">
            <summary>
            The date and time when the order was closed. If the order was not clsoed, this value is null.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.ContactEmail">
            <summary>
            The customer's contact email address.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.CreatedAt">
            <summary>
            The date and time when the order was created in Shopify.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.Currency">
            <summary>
            The three letter code (ISO 4217) for the currency used for the payment.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.Customer">
            <summary>
            A <see cref="T:ShopifySharp.ShopifyCustomer"/> object containing information about the customer. This value may be null if the order was created through Shopify POS.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.DiscountCodes">
            <summary>
            Applicable discount codes that can be applied to the order.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.Email">
            <summary>
            The order's email address. Note: On and after 2015-11-03, you should be using <see cref="P:ShopifySharp.ShopifyOrder.ContactEmail"/> to refer to the customer's email address. 
            Between 2015-11-03 and 2015-12-03, updates to an order's email will also update the customer's email. This is temporary so apps can be migrated over to 
            doing customer updates rather than order updates to change the contact email. After 2015-12-03, updating updating an order's email will no longer update 
            the customer's email and apps will have to use the customer update endpoint to do so.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.FinancialStatus">
            <summary>
            The financial status of an order. Known values are "authorized", "paid", "pending", "partially_paid", "partially_refunded", "refunded" and "voided".
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.Fulfillments">
            <summary>
            An array of <see cref="T:ShopifySharp.ShopifyFulfillment"/> objects for this order.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.FulfillmentStatus">
            <summary>
            The fulfillment status for this order. Known values are 'fulfilled', 'null' and 'partial'.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.Tags">
            <summary>
            Tags are additional short descriptors, commonly used for filtering and searching, formatted as a string of comma-separated values.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.LandingSite">
            <summary>
            The URL for the page where the buyer landed when entering the shop.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.LineItems">
            <summary>
            An array of <see cref="T:ShopifySharp.ShopifyLineItem"/> objects, each one containing information about an item in the order.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.LocationId">
            <summary>
            The unique numeric identifier for the physical location at which the order was processed. Only present on orders processed at point of sale.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.Name">
            <summary>
            The customer's order name as represented by a number, e.g. '#1001'.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.Note">
            <summary>
            The text of an optional note that a shop owner can attach to the order.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.NoteAttributes">
            <summary>
            Extra information that is added to the order.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.Number">
            <summary>
            Numerical identifier unique to the shop. A number is sequential and starts at 1000.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.OrderNumber">
            <summary>
            A unique numeric identifier for the order. This one is used by the shop owner and customer. 
            This is different from the id property, which is also a unique numeric identifier for the order, but used for API purposes.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.OrderStatusUrl">
            <summary>
            The URL pointing to the order status web page. The URL will be null unless the order was created from a checkout.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.PaymentDetails">
            <summary>
            Payment details for this order. May be null if the order was created via API without payment details.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.PaymentGatewayNames">
            <summary>
            The list of all payment gateways used for the order.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.ProcessedAt">
            <summary>
            The date that the order was processed at.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.ProcessingMethod">
            <summary>
            The type of payment processing method. Known values are 'checkout', 'direct', 'manual', 'offsite', 'express', 'free' and 'none'.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.ReferringSite">
            <summary>
            The website that the customer clicked on to come to the shop.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.Refunds">
            <summary>
            The list of <see cref="T:ShopifySharp.ShopifyRefund"/> objects applied to the order
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.ShippingAddress">
            <summary>
            The mailing address to where the order will be shipped. This address is optional and will not be available on orders that do not require one.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.ShippingLines">
            <summary>
            An array of <see cref="T:ShopifySharp.ShopifyShippingLine"/> objects, each of which details the shipping methods used.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.SourceName">
            <summary>
            Where the order originated. May only be set during creation, and is not writeable thereafter.
            Orders created via the API may be assigned any string of your choice except for "web", "pos", "iphone", and "android". 
            Default is "api".
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.SubtotalPrice">
            <summary>
            Price of the order before shipping and taxes
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.TaxLines">
            <summary>
            An array of <see cref="T:ShopifySharp.ShopifyTaxLine"/> objects, each of which details the total taxes applicable to the order.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.TaxesIncluded">
            <summary>
            States whether or not taxes are included in the order subtotal. 
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.Token">
            <summary>
            Unique identifier for a particular order.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.TotalDiscounts">
            <summary>
            The total amount of the discounts applied to the price of the order.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.TotalLineItemsPrice">
            <summary>
            The sum of all the prices of all the items in the order.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.TotalPrice">
            <summary>
            The sum of all the prices of all the items in the order, with taxes and discounts included (must be positive).
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.TotalPriceUsd">
            <summary>
            The sum of all the prices of all the items in the order, in USD, with taxes and discounts included (must be positive).
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.TotalTax">
            <summary>
            The sum of all the taxes applied to the order (must be positive).
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.TotalWeight">
            <summary>
            The sum of all the weights of the line items in the order, in grams.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.UpdatedAt">
            <summary>
            The date and time when the order was last modified.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.UserId">
            <summary>
            The unique numerical identifier for the user logged into the terminal at the time the order was processed at. Only present on orders processed at point of sale. 
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrder.Transactions">
            <summary>
            An array of <see cref="T:ShopifySharp.ShopifyTransaction"/> objects that detail all of the transactions in 
            this order.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyRedirect">
            <summary>
            An entity representing a Shopify redirect.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyRedirect.Path">
            <summary>
            The "before" path to be redirected. When the user navigates to this path, they will be redirected to the path specified by target.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyRedirect.Target">
            <summary>
            The "after" path or URL to be redirected to. This property can be set to any path on the shop's site, or any URL, even one on a 
            completely different domain.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifySmartCollection">
            <summary>
            An entity representing a Shopify Smart Collection Object.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifySmartCollection.BodyHtml">
            <summary>
            The description of the smart collection, complete with HTML markup. Many templates display this on their smart collection page.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifySmartCollection.Handle">
            <summary>
            A human-friendly unique string for the smart collection automatically generated from its title. This is used in shop themes by the Liquid templating language to refer to the smart collection. Limit of 255 characters.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifySmartCollection.Image">
            <summary>
            The collection image.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifySmartCollection.PublishedAt">
            <summary>
            This can have two different types of values, depending on whether the smart collection has been published (i.e., made visible to customers):
            If the smart collection is published, this value is the date and time when it was published.The API returns this value in ISO 8601 format.
            If the smart collection is hidden (i.e., not published), this value is null. Changing a smart collection's status from published to hidden changes its published_at property to null.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifySmartCollection.PublishedScope">
            <summary>
            The sales channels in which the smart collection is visible. The only currently known value is 'global'.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifySmartCollection.Rules">
            <summary>
            The list of rules that define what products go into the smart collection.        
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifySmartCollection.Disjunctive">
            <summary>
            If false, products must match all of the rules to be included in the collection. If true, products can only match one of the rules.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifySmartCollection.SortOrder">
            <summary>
            The order in which products in the smart collection appear. Known values are 'alpha-asc', 'alpha-desc', 'best-selling', 'created', 'created-desc', 'manual', 'price-asc', 'price-desc'.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifySmartCollection.TemplateSuffix">
            <summary>
            The suffix of the template you are using. By default, the original template is called product.liquid, without any suffix. Any additional templates will be: product.suffix.liquid.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifySmartCollection.Title">
            <summary>
            The name of the smart collection. Limit of 255 characters.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifySmartCollection.UpdatedAt">
            <summary>
            The date and time when the smart collection was last modified. The API returns this value in ISO 8601 format.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifySmartCollectionImage">
            <summary>
            An object representing the image for a <see cref="T:ShopifySharp.ShopifySmartCollection"/>.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifySmartCollectionImage.CreatedAt">
            <summary>
            The date the image was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifySmartCollectionImage.Src">
            <summary>
            The image's source URL.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifySmartCollectionImage.Attachment">
            <summary>
            The image's base64 attachment, used when creating an image.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifySmartCollectionRules">
            <summary>
            An entity representing a Shopify Smart Collection Rule.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifySmartCollectionRules.Relation">
            <summary>
            The relationship between the column choice, and the condition.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifySmartCollectionRules.Condition">
            <summary>
            Select products for a collection using a condition. Conditions are either strings or numbers, depending on the relation.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifySmartCollectionRules.Column">
            <summary>
            The properties of a product that can be used to to populate a collection.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyTheme">
            <summary>
            An entity representing a Shopify theme.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyTheme.CreatedAt">
            <summary>
            The date and time when the theme was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyTheme.Name">
            <summary>
            The name of the theme.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyTheme.Role">
            <summary>
            Specifies how the theme is being used within the shop. Known values are 'main', 'mobile' and 'unpublished'.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyTheme.UpdatedAt">
            <summary>
            The date and time when the theme was last updated.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyTheme.Previewable">
            <summary>
            Indicates if the theme can currently be previewed.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyTheme.Processing">
            <summary>
            Indicates if files are still being copied into place for this theme.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyTheme.ThemeStoreId">
            <summary>
            The theme's store id. Can be null if not published in the store.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyProductImage">
            <summary>
            An object representing a product image.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductImage.ProductId">
            <summary>
            The id of the product associated with the image.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductImage.Position">
            <summary>
            The order of the product image in the list. The first product image is at position 1 and is the "main" image for the product.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductImage.CreatedAt">
            <summary>
            The date and time when the product image was created. The API returns this value in ISO 8601 format.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductImage.UpdatedAt">
            <summary>
            The date and time when the product image was last modified. The API returns this value in ISO 8601 format.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductImage.Src">
            <summary>
            Specifies the location of the product image.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductImage.Filename">
            <summary>
            Specifies the file name of the image when creating a <see cref="T:ShopifySharp.ShopifyProductImage"/>, where it's then converted into the <see cref="P:ShopifySharp.ShopifyProductImage.Src"/> path
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductImage.Attachment">
            <summary>
            A base64 image attachment. Only used when creating a <see cref="T:ShopifySharp.ShopifyProductImage"/>, where it's then converted into the <see cref="P:ShopifySharp.ShopifyProductImage.Src"/>.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductImage.VariantIds">
            <summary>
            An array of variant ids associated with the image.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductImage.Metafields">
            <summary>
            Attaches additional information to a shop's resources.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyUsageCharge">
            <summary>
            Represents a variable monthly fee for an app or a service.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyUsageCharge.CreatedAt">
            <summary>
            The date and time when the usage charge was created. 
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyUsageCharge.Description">
            <summary>
            The name of the usage charge.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyUsageCharge.Price">
            <summary>
            The price of the usage charge.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyUsageCharge.RecurringApplicationChargeId">
            <summary>
            The recurring application charge the usage charge belongs to.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyUsageCharge.UpdatedAt">
            <summary>
            The date and time when the usage charge was last updated.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductOption.ProductId">
            <summary>
            The unique numeric identifier for the product.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductOption.Name">
            <summary>
            The name of the option.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductOption.Position">
            <summary>
            The order of the product variant in the list of product variants. 1 is the first position.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductOption.Values">
            <summary>
            The values for the options.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductVariant.ProductId">
            <summary>
            The unique numeric identifier for the product.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductVariant.Title">
            <summary>
            The title of the product variant.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductVariant.SKU">
            <summary>
            A unique identifier for the product in the shop.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductVariant.Position">
            <summary>
            The order of the product variant in the list of product variants. 1 is the first position.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductVariant.Grams">
            <summary>
            The weight of the product variant in grams.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductVariant.InventoryPolicy">
            <summary>
            Specifies whether or not customers are allowed to place an order for a product variant when it's out of stock. Known values are 'deny' and 'continue'.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductVariant.FulfillmentService">
            <summary>
            Service that is doing the fulfillment. Can be 'manual' or any custom string.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductVariant.InventoryManagement">
            <summary>
            Specifies whether or not Shopify tracks the number of items in stock for this product variant. Known values are 'blank' and 'shopify'.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductVariant.Price">
            <summary>
            The price of the product variant.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductVariant.CompareAtPrice">
            <summary>
            The competitors prices for the same item.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductVariant.Option1">
            <summary>
            Custom properties that a shop owner can use to define product variants.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductVariant.Option2">
            <summary>
            Custom properties that a shop owner can use to define product variants.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductVariant.Option3">
            <summary>
            Custom properties that a shop owner can use to define product variants.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductVariant.CreatedAt">
            <summary>
            The date and time when the product variant was created. The API returns this value in ISO 8601 format.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductVariant.UpdatedAt">
            <summary>
            The date and time when the product variant was last modified. The API returns this value in ISO 8601 format.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductVariant.Taxable">
            <summary>
            Specifies whether or not a tax is charged when the product variant is sold.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductVariant.RequiresShipping">
            <summary>
            Specifies whether or not a customer needs to provide a shipping address when placing an order for this product variant.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductVariant.Barcode">
            <summary>
            The barcode, UPC or ISBN number for the product.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductVariant.InventoryQuantity">
            <summary>
            The number of items in stock for this product variant.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductVariant.OldInventoryQuantity">
            <summary>
            The original stock level the client believes the product variant has.
            This should be sent to avoid a race condition when the item being adjusted is simultaneously sold online.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductVariant.InventoryQuantityAdjustment">
            <summary>
            Instead of sending a new and old value for inventory an adjustment value can be sent.
            If an adjustment value is sent it will take priority.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductVariant.ImageId">
            <summary>
            The unique numeric identifier for one of the product's images.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductVariant.Weight">
            <summary>
            The weight of the product variant in the unit system specified with weight_unit.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductVariant.WeightUnit">
            <summary>
            The unit system that the product variant's weight is measure in. The weight_unit can be either "g", "kg, "oz", or "lb".
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyProductVariant.Metafields">
            <summary>
            Attaches additional information to a shop's resources.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyRecurringCharge">
            <summary>
            An object representing a recurring application charge (i.e. a monthly subscription to your Shopify application).
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyRecurringCharge.ActivatedOn">
            <summary>
            The date and time when the customer activated the <see cref="T:ShopifySharp.ShopifyRecurringCharge"/>. Will be null if the charge
            has not been activated.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyRecurringCharge.BillingOn">
            <summary>
            The date and time when the customer will be billed. Will be null if the charge has not been activated by the customer.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyRecurringCharge.CappedAmount">
            <summary>
            The capped amount is the limit a customer can be charged for usage based billing.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyRecurringCharge.CancelledOn">
            <summary>
            The date and time when the customer cancelled their recurring application charge. Will be null if the charge has not
            been cancelled.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyRecurringCharge.ConfirmationUrl">
            <summary>
            The URL that the customer should be sent to, to accept or decline the recurring application charge.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyRecurringCharge.CreatedAt">
            <summary>
            The date and time when the recurring application charge was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyRecurringCharge.Name">
            <summary>
            The name of the recurring application charge.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyRecurringCharge.Price">
            <summary>
            The price of the recurring application charge.
            </summary>
            <remarks>Shopify returns this as a string, but JSON.net should be able to convert it to a double.</remarks>
        </member>
        <member name="P:ShopifySharp.ShopifyRecurringCharge.ReturnUrl">
            <summary>
            The URL the customer is sent to once they accept/decline a charge.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyRecurringCharge.Status">
            <summary>
             Known values are 'pending', 'accepted', 'active', 'cancelled', 'declined' and 'expired'.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyRecurringCharge.Terms">
            <summary>
            States the terms and conditions of usage based billing charges. Must be present in order to create usage charges. These are presented to the merchant when they approve the usage charges for your app.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyRecurringCharge.Test">
            <summary>
            States whether or not the application charge is a test transaction.
            </summary>
            <remarks>Valid values are 'true' or null. Needs a special converter to convert null to false and vice-versa.</remarks>
        </member>
        <member name="P:ShopifySharp.ShopifyRecurringCharge.TrialDays">
            <summary>
            Number of days that the customer is eligible for a free trial.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyRecurringCharge.TrialEndsOn">
            <summary>
            The date and time when the free trial ends. Will be null if the charge has not been accepted.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyRecurringCharge.UpdatedAt">
            <summary>
            The date and time when the recurring application charge was last updated.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyScriptTag">
            <summary>
            An object representing remote javascript tags that are loaded into the pages of a shop's storefront.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyScriptTag.CreatedAt">
            <summary>
            The date and time when the <see cref="T:ShopifySharp.ShopifyScriptTag"/> was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyScriptTag.DisplayScope">
            <summary>
            Where the script tag should be included on the store. Known values are 'online_store', 'order_status' or 'all'. Defaults to 'all'.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyScriptTag.Event">
            <summary>
            DOM event which triggers the loading of the script. The only known value is 'onload'.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyScriptTag.Src">
            <summary>
            Specifies the location of the ScriptTag.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyScriptTag.UpdatedAt">
            <summary>
            The date and time when the <see cref="T:ShopifySharp.ShopifyScriptTag"/> was updated.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShippingLine.Code">
            <summary>
            A reference to the shipping method.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShippingLine.Price">
            <summary>
            The price of this shipping method.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShippingLine.Source">
            <summary>
            The source of the shipping method.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShippingLine.Title">
            <summary>
            The title of the shipping method.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShippingLine.TaxLines">
            <summary>
            A list of <see cref="T:ShopifySharp.ShopifyTaxLine"/> objects, each of which details the taxes applicable to this <see cref="T:ShopifySharp.ShopifyShippingLine"/>.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyTaxLine.Price">
            <summary>
            The amount of tax to be charged.    
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyTaxLine.Rate">
            <summary>
            The rate of tax to be applied.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyTaxLine.Title">
            <summary>
            The name of the tax.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyTransaction">
            <summary>
            An object representing a Shopify transaction.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyTransaction.Amount">
            <summary>
            The amount of money that the transaction was for.
            </summary>
            <remarks>Like a lot of the Shopify API, the number is actually a string. Json.Net should be 
            able to convert it to a double.</remarks>
        </member>
        <member name="P:ShopifySharp.ShopifyTransaction.Authorization">
            <summary>
            The authorization code associated with the transaction.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyTransaction.CreatedAt">
            <summary>
            The date and time when the transaction was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyTransaction.DeviceId">
            <summary>
            The unique identifier for the device.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyTransaction.Gateway">
            <summary>
            The name of the gateway the transaction was issued through.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyTransaction.SourceName">
            <summary>
            The origin of the transaction. This is set by Shopify and cannot be overridden. Example values include: 'web', 'pos', 'iphone', 'android'.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyTransaction.PaymentDetails">
            <summary>
            An object containing information about the credit card used for this transaction.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyTransaction.Kind">
            <summary>
            The kind of transaction. Known values are 'authorization', 'capture', 'sale', 'void' and 'refund'.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyTransaction.OrderId">
            <summary>
            A unique numeric identifier for the order.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyTransaction.Receipt">
            <summary>
            Shopify does not currently offer documentation for this object.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyTransaction.ErrorCode">
            <summary>
            A standardized error code, e.g. 'incorrect_number', independent of the payment provider. Value can be null. A full list of known values can be found at https://help.shopify.com/api/reference/transaction.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyTransaction.Status">
            <summary>
            The status of the transaction. Valid values are: pending, failure, success or error.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyTransaction.Test">
            <summary>
            Whether the transaction is for testing purposes.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyTransaction.UserId">
            <summary>
            The unique identifier for the user.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyTransaction.Currency">
            <summary>
            The three letter code (ISO 4217) for the currency used for the payment.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyWebhook">
            <summary>
            An entity representing a Shopify webhook.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyWebhook.Address">
            <summary>
            The URL where the webhook should send the POST request when the event occurs.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyWebhook.CreatedAt">
            <summary>
            The date and time when the webhook was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyWebhook.Fields">
            <summary>
            An optional array of fields which should be included in webhooks.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyWebhook.Format">
            <summary>
            The format in which the webhook should send the data. Valid values are json and xml.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyWebhook.MetafieldNamespaces">
            <summary>
            An optional array of namespaces for metafields that should be included in webhooks.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyWebhook.Topic">
            <summary>
            The event that will trigger the webhook, e.g. 'orders/create' or 'app/uninstalled'. A full list of webhook topics can be found at https://help.shopify.com/api/reference/webhook.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyWebhook.UpdatedAt">
            <summary>
            The date and time when the webhook was updated.
            </summary>
        </member>
        <member name="T:ShopifySharp.EnumExtensions">
            <summary>
            Enum Extension Method
            </summary>
        </member>
        <member name="M:ShopifySharp.EnumExtensions.ToSerializedString(System.Enum)">
            <summary>
            Reads and uses the enum's <see cref="T:System.Runtime.Serialization.EnumMemberAttribute"/> for serialization. 
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:ShopifySharp.EnumExtensions.EnumListToString``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Convert list of Enums to a comma seperated string
            </summary>
        </member>
        <member name="M:ShopifySharp.ObjectExtensions.ToDictionary(System.Object)">
            <summary>
            Converts the object to a dictionary./>
            </summary>
            <returns>The object as a <see cref="T:System.Collections.Generic.IDictionary`2"/>.</returns>
        </member>
        <member name="T:ShopifySharp.Filters.ShopifyArticleFilter">
            <summary>
            Options for filtering the results of <see cref="M:ShopifySharp.ShopifyArticleService.ListAsync(System.Int64,ShopifySharp.Filters.ShopifyArticleFilter)"/>.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyArticleFilter.Handle">
            <summary>
            Filter the results to this article handle.
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.ShopifyEventListFilter">
            <summary>
            A generic class for filtering the results of a .CountAsync command.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyEventListFilter.Limit">
            <summary>
            Limit the amount of results. Default is 50, max is 250.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyEventListFilter.Page">
            <summary>
            Page of results to be returned. Default is 1.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyEventListFilter.SinceId">
            <summary>
            Restrict results to after the specified ID
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyEventListFilter.CreatedAtMin">
            <summary>
            Show events created at or after date and time
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyEventListFilter.CreatedAtMax">
            <summary>
            Show events created at or before date and time
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyEventListFilter.Filters">
            <summary>
            Only show events specified in filter (comma , separated). A full list of events can be found at https://help.shopify.com/api/reference/event
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyEventListFilter.Verbs">
            <summary>
            Only show events of a certain kind (comma , separated). A full list of events can be found at https://help.shopify.com/api/reference/event
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyEventListFilter.Fields">
            <summary>
            comma-separated list of fields to include in the response.
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.ShopifyPublishableCountFilter">
            <summary>
            Generic options for filtering the count of objects that can be published.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyPublishableCountFilter.PublishedAtMin">
            <summary>
            Show objects published after date (format: 2008-12-31 03:00).
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyPublishableCountFilter.PublishedAtMax">
            <summary>
            Show objects published before date (format: 2008-12-31 03:00).
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.ShopifySmartCollectionFilter">
            <summary>
            An object for filtering the results of <see cref="M:ShopifySharp.ShopifySmartCollectionService.CountAsync(ShopifySharp.Filters.ShopifySmartCollectionFilter)"/> and <see cref="M:ShopifySharp.ShopifySmartCollectionService.ListAsync(ShopifySharp.Filters.ShopifySmartCollectionFilter)"/>.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifySmartCollectionFilter.Title">
            <summary>
            Filter to smart collections with the given title.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifySmartCollectionFilter.Handle">
            <summary>
            Filter by smart collection handle.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifySmartCollectionFilter.ProductId">
            <summary>
            Filter to smart collections that includes given product.
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.ShopifyCollectFilter">
            <summary>
            Options for filtering <see cref="M:ShopifySharp.ShopifyCollectService.ListAsync(ShopifySharp.Filters.ShopifyCollectFilter)"/> results.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyCollectFilter.ProductId">
            <summary>
            An optional product id to retrieve. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyCollectFilter.CollectionId">
            <summary>
            An optional collection id to retrieve. 
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.ShopifyCustomCollectionFilter">
            <summary>
            Options for filtering <see cref="T:ShopifySharp.ShopifyCustomCollectionService"/> requests.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyCustomCollectionFilter.Title">
            <summary>
            Show smart collections with given title 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyCustomCollectionFilter.ProductId">
            <summary>
            Show smart collections that includes given product
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyCustomCollectionFilter.Handle">
            <summary>
            Filter by smart collection handle
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.ShopifyMetaFieldFilter">
            <summary>
            Options for filtering <see cref="M:ShopifySharp.ShopifyMetaFieldService.CountAsync(System.Nullable{System.Int64},System.String,ShopifySharp.Filters.ShopifyMetaFieldFilter)"/> and 
            <see cref="M:ShopifySharp.ShopifyMetaFieldService.ListAsync(System.Nullable{System.Int64},System.String,ShopifySharp.Filters.ShopifyMetaFieldFilter)"/> results.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyMetaFieldFilter.Namespace">
            <summary>
            Filter by namespace.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyMetaFieldFilter.Key">
            <summary>
            Filter by key value.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyMetaFieldFilter.ValueType">
            <summary>
            Filter by value_type.
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.ShopifyPageFilter">
            <summary>
            Options for filtering <see cref="M:ShopifySharp.ShopifyPageService.CountAsync(ShopifySharp.Filters.ShopifyPageFilter)"/> and 
            <see cref="M:ShopifySharp.ShopifyPageService.ListAsync(ShopifySharp.Filters.ShopifyPageFilter)"/> results.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyPageFilter.Title">
            <summary>
            Filter by page title.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyPageFilter.Handle">
            <summary>
            Filter by page handle.
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.ShopifyProductFilter">
            <summary>
            Options for filtering <see cref="M:ShopifySharp.ShopifyProductService.CountAsync(ShopifySharp.Filters.ShopifyProductFilter)"/> and 
            <see cref="M:ShopifySharp.ShopifyProductService.ListAsync(ShopifySharp.Filters.ShopifyProductFilter)"/> results.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyProductFilter.Title">
            <summary>
            Filter by product title.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyProductFilter.Vendor">
            <summary>
            Filter by product vendor.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyProductFilter.Handle">
            <summary>
            Filter by product handle.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyProductFilter.ProductType">
            <summary>
            Filter by product type.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyProductFilter.CollectionId">
            <summary>
            Filter by collection id.
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.ShopifyOrderFilter">
            <summary>
            Options for filtering <see cref="M:ShopifySharp.ShopifyOrderService.CountAsync(ShopifySharp.Filters.ShopifyOrderFilter)"/> and
            <see cref="M:ShopifySharp.ShopifyOrderService.ListAsync(ShopifySharp.Filters.ShopifyOrderFilter)"/> results.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyOrderFilter.Status">
            <summary>
            The status of orders to retrieve. Known values are "open", "closed", "cancelled" and "any".
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyOrderFilter.FinancialStatus">
            <summary>
            The financial status of orders to retrieve. Known values are "authorized", "paid", "pending", "partially_paid", "partially_refunded", "refunded" and "voided".
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyOrderFilter.FulfillmentStatus">
            <summary>
            The fulfillment status of orders to retrieve. Leave this null to retrieve orders with any fulfillment status.
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.ShopifyRedirectFilter">
            <summary>
            Options for filtering <see cref="M:ShopifySharp.ShopifyRedirectService.ListAsync(ShopifySharp.Filters.ShopifyRedirectFilter)"/> results.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyRedirectFilter.Path">
            <summary>
            An optional parameter that filters the result to redirects with the given path.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyRedirectFilter.Target">
            <summary>
            An optional parameter that filters the result to redirects with the given target.
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.ShopifyScriptTagFilter">
            <summary>
            Options for filtering <see cref="M:ShopifySharp.ShopifyScriptTagService.ListAsync(ShopifySharp.Filters.ShopifyScriptTagFilter)"/> results.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyScriptTagFilter.Src">
            <summary>
            Returns only those <see cref="T:ShopifySharp.ShopifyScriptTag"/>s with the given <see cref="P:ShopifySharp.ShopifyScriptTag.Src"/> value.
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.ShopifyCountFilter">
            <summary>
            A generic class for filtering the results of a .CountAsync command.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyCountFilter.CreatedAtMin">
            <summary>
            Restricts results to those created after date (format: 2008-12-31 03:00).
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyCountFilter.CreatedAtMax">
            <summary>
            Restricts results to those created before date (format: 2008-12-31 03:00).
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyCountFilter.UpdatedAtMin">
            <summary>
            Restricts results to those last updated after date (format: 2008-12-31 03:00).
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyCountFilter.UpdatedAtMax">
            <summary>
            Restricts results to those last updated before date (format: 2008-12-31 03:00).
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyCountFilter.SinceId">
            <summary>
            Restrict results to after the specified ID. Note: this field may not have an effect on certain resources.
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.ShopifyListFilter">
            <summary>
            A generic class for filtering the results of a .ListAsync command.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyListFilter.Ids">
            <summary>
            An optional array of order ids to retrieve. 
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyListFilter.Limit">
            <summary>
            Limit the amount of results. Default is 50, max is 250.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyListFilter.Page">
            <summary>
            Page of results to be returned. Default is 1.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyListFilter.Fields">
            <summary>
            An optional, comma-separated list of fields to include in the response.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyListFilter.Order">
            <summary>
            An optional field name to order by, followed by either ' asc' or ' desc'.
            For example, 'created_at asc'
            Not all fields are supported...
            </summary>
        </member>
        <member name="M:ShopifySharp.Filters.ShopifyListFilter.ToSingleParameter(System.String,System.Object,System.Reflection.PropertyInfo,RestSharp.ParameterType)">
            <summary>
            Parameterizes this class, with special handling for <see cref="P:ShopifySharp.Filters.ShopifyListFilter.Ids"/>.
            </summary>
            <param name="propName">The name of the property. Will match the property's <see cref="T:Newtonsoft.Json.JsonPropertyAttribute"/> name — 
            rather than the real property name — where applicable. Use <paramref name="property"/>.Name to get the real name.</param>
            <param name="value">The property's value.</param>
            <param name="property">The property itself.</param>
            <param name="type">The type of parameter to create.</param>
            <returns>The new parameter.</returns>
        </member>
        <member name="T:ShopifySharp.Filters.ShopifyPublishableListFilter">
            <summary>
            Generic options for filtering objects that can be published (e.g. those with a PublishedAt, Published status).
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyPublishableListFilter.PublishedAtMin">
            <summary>
            Show objects published after date (format: 2008-12-31 03:00).
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyPublishableListFilter.PublishedAtMax">
            <summary>
            Show objects published before date (format: 2008-12-31 03:00).
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyPublishableListFilter.PublishedStatus">
            <summary>
            Published Status.
            published - Show only published objects, unpublished - Show only unpublished objects, any - Show all objects(default)
            </summary>
        </member>
        <member name="T:ShopifySharp.Filters.ShopifyWebhookFilter">
            <summary>
            Options for filtering <see cref="M:ShopifySharp.ShopifyWebhookService.ListAsync(ShopifySharp.Filters.ShopifyWebhookFilter)" /> results.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyWebhookFilter.Address">
            <summary>
            An optional filter for the address property. When used, the method will only return webhooks with the given address.
            </summary>
        </member>
        <member name="P:ShopifySharp.Filters.ShopifyWebhookFilter.Topic">
            <summary>
            An optional filter for the topic property. When used, the method will only return webhooks with the given topic. A full list of topics can be found at https://help.shopify.com/api/reference/webhook.
            </summary>
        </member>
        <member name="T:ShopifySharp.IRequestExecutionPolicy">
            <summary>
            Used to specify centralized logic that should run when executing shopify requests.
            It is most useful to implement retry logic, but it can also be used for other concerns (i.e. tracing)
            </summary>
        </member>
        <member name="T:ShopifySharp.RetryExecutionPolicy">
            <summary>
            See https://help.shopify.com/api/guides/api-call-limit
            </summary>
        </member>
        <member name="T:ShopifySharp.SmartRetryExecutionPolicy">
            <summary>
            A retry policy that attemps to pro-actively limit the number of requests that will result in a ShopifyRateLimitException
            by implementing the leaky bucket algorithm.
            For example: if 100 requests are created in parallel, only 40 should be immediately sent, and the subsequent 60 requests
            should be throttled at 1 per 500ms.
            </summary>
            <remarks>
            In comparison, the naive retry policy will issue the 100 requests immediately:
            60 requests will fail and be retried after 500ms,
            59 requests will fail and be retried after 500ms,
            58 requests will fail and be retried after 500ms.
            See https://help.shopify.com/api/guides/api-call-limit
            https://en.wikipedia.org/wiki/Leaky_bucket
            </remarks>
        </member>
        <member name="T:ShopifySharp.ShopifyRateLimitException">
            <summary>
            An exception thrown when an API call has reached Shopify's rate limit.
            </summary>
        </member>
        <member name="T:ShopifySharp.Serializers.JsonNetSerializer">
            <summary>
            JSON deserializer for RestSharp's RestClient.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyAddress.Address1">
            <summary>
            The mailing address.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyAddress.Address2">
            <summary>
            An additional field for the mailing address.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyAddress.City">
            <summary>
            The city.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyAddress.Company">
            <summary>
            The company.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyAddress.Country">
            <summary>
            The country.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyAddress.CountryCode">
            <summary>
            The two-letter country code corresponding to the country.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyAddress.CountryName">
            <summary>
            The normalized country name.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyAddress.Default">
            <summary>
            Indicates whether this address is the default address.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyAddress.FirstName">
            <summary>
            The first name.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyAddress.LastName">
            <summary>
            The last name.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyAddress.Name">
            <summary>
            The name.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyAddress.Phone">
            <summary>
            The phone number.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyAddress.Province">
            <summary>
            The province or state name
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyAddress.ProvinceCode">
            <summary>
            The two-letter province or state code.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyAddress.Zip">
            <summary>
            The ZIP or postal code.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomer.AcceptsMarketing">
            <summary>
            Indicates whether the customer has consented to be sent marketing material via email.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomer.Addresses">
            <summary>
            A list of addresses for the customer.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomer.CreatedAt">
            <summary>
            The date and time when the customer was created. 
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomer.DefaultAddress">
            <summary>
            The default address for the customer.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomer.Email">
            <summary>
            The email address of the customer.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomer.FirstName">
            <summary>
            The customer's first name.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomer.Metafields">
            <summary>
            Additional metadata about the customer. Note: This should only be used when creating or updating a <see cref="T:ShopifySharp.ShopifyCustomer"/>, as
            Shopify will never return <see cref="T:ShopifySharp.ShopifyCustomer"/> metafields. Instead, you need to query metafields with <see cref="!:ShopifyMetafieldService"/>.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomer.MultipassIdentifier">
            <summary>
            The customer's identifier used with Multipass login
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomer.LastName">
            <summary>
            The customer's last name.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomer.LastOrderId">
            <summary>
            The id of the customer's last order.
            </summary>
            <remarks>Property can be null or longer than max int32 value. Set to nullable long instead.</remarks>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomer.LastOrderName">
            <summary>
            The name of the customer's last order. This is directly related to the Order's name field.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomer.Note">
            <summary>
            A note about the customer.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomer.OrdersCount">
            <summary>
            The number of orders associated with this customer.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomer.State">
            <summary>
            The state of the customer in a shop. Valid values are 'disabled', 'decline', 'invited' and 'enabled'.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomer.Tags">
            <summary>
            Tags are additional short descriptors formatted as a string of comma-separated values.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomer.TaxExempt">
            <summary>
            Indicates whether the customer should be charged taxes when placing orders. 
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomer.TotalSpent">
            <summary>
            The total amount of money that the customer has spent at the shop.
            </summary>
            <remarks>The Shopify API actually returns this value as a string, but Json.Net can automatically convert to double.</remarks>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomer.UpdatedAt">
            <summary>
            The date and time when the customer information was updated. 
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomer.VerifiedEmail">
            <summary>
            States whether or not the email address has been verified.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyMetaField.CreatedAt">
            <summary>
            The date and time when the metafield was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyMetaField.UpdatedAt">
            <summary>
            The date and time when the metafield was last updated.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyMetaField.Key">
            <summary>
            Identifier for the metafield (maximum of 30 characters).
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyMetaField.Value">
            <summary>
            Information to be stored as metadata. Must be either a string or an int.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyMetaField.ValueType">
            <summary>
            States whether the information in the value is stored as a 'string' or 'integer.'
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyMetaField.Namespace">
            <summary>
            Container for a set of metadata. Namespaces help distinguish between metadata you created and metadata created by another individual with a similar namespace (maximum of 20 characters).
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyMetaField.Description">
            <summary>
            Additional information about the metafield.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyMetaField.OwnerId">
            <summary>
            The Id of the Shopify Resource that the metafield is associated with. This value could be the id of things like product, order, variant, collection.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyMetaField.OwnerResource">
            <summary>
            The name of the Shopify Resource that the metafield is associated with. This could be things like product, order, variant, collection.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyObject.Id">
            <summary>
            The object's unique id.
            </summary>
            <remarks>
            Some object ids are longer than the max int32 value. Using long instead.
            Marked as nullable due to issues I've run into when trying to create a resource. If Id is present when creating, 
            Shopify will try to find that resource. By default it's set to 0 when not null, so the resource won't exist and 
            Shopify will return a 404 Not Found. This is most obvious when creating a customer with a <see cref="T:ShopifySharp.ShopifyAddress"/> 
            and the <see cref="T:ShopifySharp.ShopifyAddress"/> Id set to 0.
            </remarks>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.Address1">
            <summary>
            The shop's street address.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.City">
            <summary>
            The city in which the shop is located.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.Country">
            <summary>
            The shop's country (by default equal to the two-letter country code).
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.CountryCode">
            <summary>
            The two-letter country code corresponding to the shop's country.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.CountryName">
            <summary>
            The shop's normalized country name.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.CreatedAt">
            <summary>
            The date and time when the shop was created.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.CustomerEmail">
            <summary>
            The customer's email.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.Currency">
            <summary>
            The three-letter code for the currency that the shop accepts.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.Description">
            <summary>
            The shop's description.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.Domain">
            <summary>
            The shop's domain.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.Email">
            <summary>
            The contact email address for the shop.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.ForceSSL">
            <summary>
            Indicates whether the shop forces requests made to its resources to be made over SSL, using the HTTPS protocol. If true, HTTP requests will be redirected to HTTPS.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.GoogleAppsDomain">
            <summary>
            Present when a shop has a google app domain. It will be returned as a URL, else null.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.GoogleAppsLoginEnabled">
            <summary>
            Present if a shop has google apps enabled. Those shops with this feature will be able to login to the google apps login.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.Latitude">
            <summary>
            Geographic coordinate specifying the north/south location of a shop.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.Longitude">
            <summary>
            Geographic coordinate specifying the east/west location of a shop.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.MoneyFormat">
            <summary>
            A string representing the way currency is formatted when the currency isn't specified.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.MoneyWithCurrencyFormat">
            <summary>
            A string representing the way currency is formatted when the currency is specified.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.MyShopifyDomain">
            <summary>
            The shop's 'myshopify.com' domain.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.Name">
            <summary>
            The name of the shop.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.PlanName">
            <summary>
            The name of the Shopify plan the shop is on.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.DisplayPlanName">
            <summary>
            The display name of the Shopify plan the shop is on.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.PasswordEnabled">
            <summary>
            Indicates whether the Storefront password protection is enabled.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.Phone">
            <summary>
            The contact phone number for the shop.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.PrimaryLocale">
            <summary>
            The shop's primary locale.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.Province">
            <summary>
            The shop's normalized province or state name.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.ProvinceCode">
            <summary>
            The two-letter code for the shop's province or state.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.ShipsToCountries">
            <summary>
            A list of countries the shop ships products to, separated by a comma.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.ShopOwner">
            <summary>
            The username of the shop owner.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.Source">
            <summary>
            Unkown. Shopify documentation does not currently indicate what this property actually is.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.TaxShipping">
            <summary>
            Specifies whether or not taxes were charged for shipping.
            </summary>
            <remarks>Although the Shopify docs don't indicate this, it's possible for the value to be null.</remarks>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.TaxesIncluded">
            <summary>
            The setting for whether applicable taxes are included in product prices. 
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.CountyTaxes">
            <summary>
            The setting for whether the shop is applying taxes on a per-county basis or not (US-only). Valid values are: "true" or "null."
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.Timezone">
            <summary>
            The name of the timezone the shop is in.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.IANATimezone">
            <summary>
            The named timezone assigned by the IANA.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.Zip">
            <summary>
            The zip or postal code of the shop's address.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.HasStorefront">
            <summary>
            Indicates whether the shop has web-based storefront or not.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyShop.SetupRequired">
            <summary>
            Indicates whether the shop has any outstanding setup steps or not.
            </summary>
        </member>
        <member name="T:ShopifySharp.Parameterizable">
            <summary>
            An abstract class for parameterizing certain objects.
            </summary>
        </member>
        <member name="M:ShopifySharp.Parameterizable.ToParameters(RestSharp.ParameterType)">
            <summary>
            Converts the object to an array of RestSharp parameters.
            </summary>
            <returns>The array of RestSharp parameters.</returns>
        </member>
        <member name="M:ShopifySharp.Parameterizable.ToSingleParameter(System.String,System.Object,System.Reflection.PropertyInfo,RestSharp.ParameterType)">
            <summary>
            Converts the given property and value to a parameter. Can be overriden to customize parameterization of a property. 
            Will NOT be called by the <see cref="M:ShopifySharp.Parameterizable.ToParameters(RestSharp.ParameterType)"/> method if the value 
            is null.
            </summary>
            <param name="propName">The name of the property. Will match the property's <see cref="T:Newtonsoft.Json.JsonPropertyAttribute"/> name — 
            rather than the real property name — where applicable. Use <paramref name="property"/>.Name to get the real name.</param>
            <param name="value">The property's value.</param>
            <param name="property">The property itself.</param>
            <param name="type">The type of parameter to create.</param>
            <returns>The new parameter.</returns>
        </member>
        <member name="M:ShopifySharp.RequestEngine.BuildShopUri(System.String)">
            <summary>
            Attempts to build a shop API <see cref="T:System.Uri"/> for the given shop.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <exception cref="T:ShopifySharp.ShopifyException">Thrown if the given URL cannot be converted into a well-formed URI.</exception>
            <returns>The shop's API <see cref="T:System.Uri"/>.</returns>
        </member>
        <member name="M:ShopifySharp.RequestEngine.CreateClient(System.Uri,System.String)">
            <summary>
            Creates a new <see cref="T:RestSharp.RestClient"/> configured for use with ShopifySharp.
            </summary>
            <param name="shopUri">The base shop <see cref="T:System.Uri"/>.</param>
            <param name="shopAccessToken">An optional shop access token. If present, the token will be set as a default X-Shopify-Access-Token for every request.</param>
            <returns>The configured <see cref="T:RestSharp.RestClient"/>.</returns>
        </member>
        <member name="M:ShopifySharp.RequestEngine.CreateRequest(System.String,RestSharp.Method,System.String)">
            <summary>
            Creates an <see cref="T:RestSharp.IRestRequest"/> by setting the method and the necessary Json.Net serializer.
            </summary>
            <param name="path">The request's path.</param>
            <param name="method">The HTTP <see cref="T:RestSharp.Method"/> to use for the request.</param>
            <param name="rootElement">The root element to deserialize. Default is null.</param>
            <returns>The prepared <see cref="T:RestSharp.IRestRequest"/>.</returns>
            <remarks>We've created this method to ensure every request uses our custom <see cref="T:ShopifySharp.Serializers.JsonNetSerializer"/>, which ensures 
            that each class serializes with the proper <see cref="T:Newtonsoft.Json.JsonPropertyAttribute"/></remarks>
        </member>
        <member name="M:ShopifySharp.RequestEngine.ExecuteRequestAsync(RestSharp.RestClient,RestSharp.IRestRequest)">
            <summary>
            Executes a <see cref="T:RestSharp.IRestRequest"/> and returns a JToken for querying, or throws an exception when the response is invalid. 
            Use this method when the expected response is a single line or simple object that doesn't warrant creating its own class.
            </summary>
            <param name="client">A <see cref="T:RestSharp.RestClient"/>.</param>
            <param name="request">An <see cref="T:RestSharp.IRestRequest"/>.</param>
            <returns>The <see cref="T:Newtonsoft.Json.Linq.JToken"/> to be queried.</returns>
        </member>
        <member name="M:ShopifySharp.RequestEngine.ExecuteRequestAsync``1(RestSharp.RestClient,RestSharp.IRestRequest)">
            <summary>
            Executes a <see cref="T:RestSharp.IRestRequest"/> and returns data of the given type, or throws an exception when the response is invalid.
            </summary>
            <typeparam name="T">The type of data to be returned.</typeparam>
            <param name="client">A <see cref="T:RestSharp.RestClient"/>.</param>
            <param name="request">An <see cref="T:RestSharp.IRestRequest"/>.</param>
            <returns>The data.</returns>
        </member>
        <member name="M:ShopifySharp.RequestEngine.CheckResponseExceptions(RestSharp.IRestResponse)">
            <summary>
            Checks an <see cref="T:RestSharp.IRestResponse" /> for exceptions or invalid responses. Throws an exception when necessary.
            </summary>
            <param name="response">The response.</param>
        </member>
        <member name="M:ShopifySharp.RequestEngine.ParseErrorJson(System.String)">
            <summary>
            Parses a JSON string for Shopify API errors.
            </summary>
            <returns>Returns null if the JSON could not be parsed into an error.</returns>
        </member>
        <member name="P:ShopifySharp.ShopifyException.RequestId">
            <summary>
            The XRequestId header returned by Shopify. Can be used when working with the Shopify support team to identify the failed request.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyException.Errors">
            <remarks>
            Dictionary is always initialized to ensure null reference errors won't be thrown when trying to check error messages.
            </remarks>
        </member>
        <member name="P:ShopifySharp.ShopifyException.JsonError">
            <summary>
            The raw, JSON-serialized error returned by Shopify.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyApplicationCreditService">
            <summary>
            A service for offering credits for payments made via the Application Charge, Recurring Application Charge, and Usage Charge APIs.
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifyApplicationCreditService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ShopifyApplicationCreditService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyApplicationCreditService.ListAsync(System.String)">
            <summary>
            Gets a list of all past and present application credits. 
            </summary>
            <param name="fields">A comma-separated list of fields to include in the response.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyApplicationCreditService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the application credit with the given id.
            </summary>
            <param name="id">The application credit's id.</param>
            <param name="fields">A comma-separated list of fields to include in the response.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyApplicationCreditService.CreateAsync(ShopifySharp.ShopifyApplicationCredit)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.ShopifyApplicationCredit"/>.
            </summary>
            <param name="credit">A new <see cref="T:ShopifySharp.ShopifyApplicationCredit"/>. Id should be set to null.</param>
        </member>
        <member name="T:ShopifySharp.ShopifyArticleService">
            <summary>
            A service for manipulating a blog's articles.
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifyArticleService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of the service.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyArticleService.ListAsync(System.Int64,ShopifySharp.Filters.ShopifyArticleFilter)">
            <summary>
            Gets a list of up to 250 articles belonging to the given blog.
            </summary>
            <param name="blogId">The blog that the articles belong to.</param>
            <param name="filter">Options for filtering the result.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyArticleService.CountAsync(System.Int64,ShopifySharp.Filters.ShopifyPublishableCountFilter)">
            <summary>
            Gets a count of the articles belonging to the given blog.
            </summary>
            <param name="blogId">The blog that the articles belong to.</param>
            <param name="filter">Options for filtering the result.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyArticleService.GetAsync(System.Int64,System.Int64,System.String)">
            <summary>
            Gets an article with the given id.
            </summary>
            <param name="blogId">The blog that the article belongs to.</param>
            <param name="articleId">The article's id.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyArticleService.CreateAsync(System.Int64,ShopifySharp.ShopifyArticle,System.Collections.Generic.IEnumerable{ShopifySharp.ShopifyMetaField})">
            <summary>
            Creates a new article on the given blog.
            </summary>
            <param name="blogId">The blog that the article will belong to.</param>
            <param name="article">The article being created. Id should be null.</param>
            <param name="metafields">Optional metafield data that can be returned by the <see cref="T:ShopifySharp.ShopifyMetaFieldService"/>.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyArticleService.UpdateAsync(System.Int64,ShopifySharp.ShopifyArticle,System.Collections.Generic.IEnumerable{ShopifySharp.ShopifyMetaField})">
            <summary>
            Updates an article.
            </summary>
            <param name="blogId">The blog that the article belongs to.</param>
            <param name="article">The article being updated. Id should not be null.</param>
            <param name="metafields">Optional metafield data that can be returned by the <see cref="T:ShopifySharp.ShopifyMetaFieldService"/>.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyArticleService.DeleteAsync(System.Int64,System.Int64)">
            <summary>
            Deletes an article with the given id.
            </summary>
            <param name="blogId">The blog that the article belongs to.</param>
            <param name="articleId">The article benig deleted.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyArticleService.ListAuthorsAsync">
            <summary>
            Gets a list of all article authors.
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifyArticleService.ListTagsAsync(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets a list of all article tags.
            </summary>
            <param name="limit">The number of tags to return</param>
            <param name="popular">A flag to indicate only to a certain number of the most popular tags.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyArticleService.ListTagsForBlogAsync(System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Gets a list of all article tags for the given blog.
            </summary>
            <param name="blogId">The blog that the tags belong to.</param>
            <param name="limit">The number of tags to return</param>
            <param name="popular">A flag to indicate only to a certain number of the most popular tags.</param>
        </member>
        <member name="T:ShopifySharp.ShopifyAssetService">
            <summary>
            A service for manipulating Shopify's Assets API.
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifyAssetService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ShopifyAssetService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyAssetService.GetAsync(System.Int64,System.String,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.ShopifyAsset"/> with the given id.
            </summary>
            <param name="themeId">The id of the theme that the asset belongs to. Assets themselves do not have ids.</param>
            <param name="key">The key value of the asset, e.g. 'templates/index.liquid' or 'assets/bg-body.gif'.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.ShopifyAsset"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyAssetService.ListAsync(System.Int64,System.String)">
            <summary>
            Retrieves a list of all <see cref="T:ShopifySharp.ShopifyAsset"/> objects. Listing theme assets only returns metadata about each asset. 
            You need to request assets individually in order to get their contents. 
            </summary>
            <param name="themeId">The id of the theme that the asset belongs to.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The list of <see cref="T:ShopifySharp.ShopifyAsset"/> objects.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyAssetService.CreateOrUpdateAsync(System.Int64,ShopifySharp.ShopifyAsset)">
            <summary>
            Creates or updates a <see cref="T:ShopifySharp.ShopifyAsset"/>. Both tasks use the same method due to the 
            way Shopify API handles assets. If an asset has a unique <see cref="P:ShopifySharp.ShopifyAsset.Key"/> value,
            it will be created. If not, it will be updated. Copy an asset by setting the 
            <see cref="P:ShopifySharp.ShopifyAsset.SourceKey"/> to the target's <see cref="P:ShopifySharp.ShopifyAsset.Key"/> value.
            Note: This will not return the asset's <see cref="P:ShopifySharp.ShopifyAsset.Value"/> property. You should
            use <see cref="M:ShopifySharp.ShopifyAssetService.GetAsync(System.Int64,System.String,System.String)"/> to refresh the value after creating or updating.
            </summary>
            <param name="themeId">The id of the theme that the asset belongs to.</param>
            <param name="asset">The asset.</param>
            <returns>The created or updated asset.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyAssetService.DeleteAsync(System.Int64,System.String)">
            <summary>
            Deletes a <see cref="T:ShopifySharp.ShopifyAsset"/> with the given key.
            </summary>
            <param name="themeId">The id of the theme that the asset belongs to.</param>
            <param name="key">The key value of the asset, e.g. 'templates/index.liquid' or 'assets/bg-body.gif'.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyAssetService.SetAssetQuerystring(RestSharp.IRestRequest,System.String,System.Int64)">
            <summary>
            Sets the proper querystring for getting or deleting a single asset.
            </summary>
            <param name="req">The request to modify.</param>
            <param name="key">The key value of the asset, e.g. 'templates/index.liquid' or 'assets/bg-body.gif'.</param>
            <param name="themeId">The id of the theme that the asset belongs to.</param>
            <returns>The request with the proper querystring.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyAuthorizationService.IsAuthenticRequest(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Determines if an incoming request is authentic.
            </summary>
            <param name="querystring">The collection of querystring parameters from the request. Hint: use Request.QueryString if you're calling this from an ASP.NET MVC controller.</param>
            <param name="shopifySecretKey">Your app's secret key.</param>
            <returns>A boolean indicating whether the request is authentic or not.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyAuthorizationService.IsAuthenticProxyRequest(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Determines if an incoming proxy page request is authentic. Conceptually similar to <see cref="M:ShopifySharp.ShopifyAuthorizationService.IsAuthenticRequest(System.Collections.Specialized.NameValueCollection,System.String)"/>,
            except that proxy requests use HMACSHA256 rather than MD5.
            </summary>
            <param name="querystring">The collection of querystring parameters from the request. Hint: use Request.QueryString if you're calling this from an ASP.NET MVC controller.</param>
            <param name="shopifySecretKey">Your app's secret key.</param>
            <returns>A boolean indicating whether the request is authentic or not.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyAuthorizationService.IsAuthenticWebhook(System.Collections.Specialized.NameValueCollection,System.IO.Stream,System.String)">
            <summary>
            Determines if an incoming webhook request is authentic.
            </summary>
            <param name="requestHeaders">The request's headers. Hint: use Request.Headers if you're calling this from an ASP.NET MVC controller.</param>
            <param name="inputStream">The request's input stream. This method does NOT dispose the stream. 
            Hint: use Request.InputStream if you're calling this from an ASP.NET MVC controller.</param>
            <param name="shopifySecretKey">Your app's secret key.</param>
            <returns>A boolean indicating whether the webhook is authentic or not.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyAuthorizationService.IsAuthenticWebhook(System.Collections.Specialized.NameValueCollection,System.String,System.String)">
            <summary>
            Determines if an incoming webhook request is authentic.
            </summary>
            <param name="requestHeaders">The request's headers. Hint: use Request.Headers if you're calling this from an ASP.NET MVC controller.</param>
            <param name="requestBody">The body of the request.</param>
            <param name="shopifySecretKey">Your app's secret key.</param>
            <returns>A boolean indicating whether the webhook is authentic or not.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyAuthorizationService.IsValidMyShopifyUrl(System.String)">
            <summary>
            A convenience function that tries to ensure that a given URL is a valid Shopify store by checking the response headers for X-ShopId.
            </summary>
            <param name="url">The URL of the shop to check.</param>
            <returns>A boolean indicating whether the URL is valid.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyAuthorizationService.BuildAuthorizationUrl(System.Collections.Generic.IEnumerable{ShopifySharp.Enums.ShopifyAuthorizationScope},System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Builds an authorization URL for Shopify OAuth integration.
            </summary>
            <param name="scopes">An array of <see cref="T:ShopifySharp.Enums.ShopifyAuthorizationScope"/> — the permissions that your app needs to run.</param>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopifyApiKey">Your app's public API key.</param>
            <param name="redirectUrl">An optional URL to redirect the user to after integration. Overrides the Shopify app's default redirect URL.</param>
            <param name="state">An optional, random string value provided by your application which is unique for each authorization request. During the OAuth callback phase, your application should check that this value matches the one you provided to this method.</param>
            <param name="grants">Requested grant types, which will change the type of access token granted upon OAuth completion. Only known grant type is "per-user", which will give an access token restricted to the permissions of the user accepting OAuth integration and will expire when that user logs out. Leave the grants array empty or null to receive a full access token that doesn't expire.</param>
            <returns>The authorization url.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyAuthorizationService.BuildAuthorizationUrl(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Builds an authorization URL for Shopify OAuth integration.
            </summary>
            <param name="scopes">An array of Shopify permission strings, e.g. 'read_orders' or 'write_script_tags'. These are the permissions that your app needs to run.</param>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopifyApiKey">Your app's public API key.</param>
            <param name="redirectUrl">An optional URL to redirect the user to after integration. Overrides the Shopify app's default redirect URL.</param>
            <param name="state">An optional, random string value provided by your application which is unique for each authorization request. During the OAuth callback phase, your application should check that this value matches the one you provided to this method.</param>
            <param name="grants">Requested grant types, which will change the type of access token granted upon OAuth completion. Only known grant type is "per-user", which will give an access token restricted to the permissions of the user accepting OAuth integration and will expire when that user logs out. Leave the grants array empty or null to receive a full access token that doesn't expire.</param>
            <returns>The authorization url.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyAuthorizationService.Authorize(System.String,System.String,System.String,System.String)">
            <summary>
            Authorizes an application installation, generating an access token for the given shop.
            </summary>
            <param name="code">The authorization code generated by Shopify, which should be a parameter named 'code' on the request querystring.</param>
            <param name="myShopifyUrl">The store's *.myshopify.com URL, which should be a paramter named 'shop' on the request querystring.</param>
            <param name="shopifyApiKey">Your app's public API key.</param>
            <param name="shopifySecretKey">Your app's secret key.</param>
            <returns>The shop access token.</returns>
        </member>
        <member name="T:ShopifySharp.ShopifyBlogService">
            <summary>
            A service for interacting with a store's blogs (not blog posts).
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifyBlogService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ShopifyBlogService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyBlogService.ListAsync(System.Nullable{System.Int64},System.String,System.String)">
            <summary>
            Gets a list of all blogs.
            </summary>
            <param name="sinceId">Restrict results to after the specified ID</param>
            <param name="handle">Filter by Blog handle</param>
            <param name="fields">comma-separated list of fields to include in the response</param>
        </member>
        <member name="M:ShopifySharp.ShopifyBlogService.CountAsync">
            <summary>
            Gets a count of all blogs.
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifyBlogService.CreateAsync(ShopifySharp.ShopifyBlog,System.Collections.Generic.IEnumerable{ShopifySharp.ShopifyMetaField})">
            <summary>
            Creates a new blog.
            </summary>
            <param name="blog">The blog being created. Id should be null.</param>
            <param name="metafields">Optional metafield data that can be returned by the <see cref="T:ShopifySharp.ShopifyMetaFieldService"/>.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyBlogService.UpdateAsync(ShopifySharp.ShopifyBlog,System.Collections.Generic.IEnumerable{ShopifySharp.ShopifyMetaField})">
            <summary>
            Updates a blog.
            </summary>
            <param name="blog">The updated blog. Id should not be null.</param>
            <param name="metafields">Optional metafield data that can be returned by the <see cref="T:ShopifySharp.ShopifyMetaFieldService"/>.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyBlogService.GetAsync(System.Int64)">
            <summary>
            Gets a blog with the given id.
            </summary>
            <param name="id">The id of the blog you want to retrieve.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyBlogService.DeleteAsync(System.Int64)">
            <summary>
            Deletes a blog with the given id.
            </summary>
            <param name="id">The id of the blog you want to delete.</param>
        </member>
        <member name="T:ShopifySharp.ShopifyCollectService">
            <summary>
            A service for manipulating mapping between shopify products and collections
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifyCollectService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ShopifyCustomerService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyCollectService.CountAsync(ShopifySharp.Filters.ShopifyCollectFilter)">
            <summary>
            Gets a count of all of the collects (product-collection mappings).
            </summary>
            <returns>The count of all collects for the shop.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyCollectService.ListAsync(ShopifySharp.Filters.ShopifyCollectFilter)">
            <summary>
            Gets a list of up to 250 of the shop's collects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ShopifySharp.ShopifyCollectService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.ShopifyCollect"/> with the given id.
            </summary>
            <param name="collectId">The id of the collect to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.ShopifyCollect"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyCollectService.CreateAsync(ShopifySharp.ShopifyCollect)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.ShopifyCollect"/> on the store. Map product to collection
            </summary>
            <param name="collect">A new <see cref="T:ShopifySharp.ShopifyCollect"/>. Id should be set to null.</param>
            <returns>The new <see cref="T:ShopifySharp.ShopifyCollect"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyCollectService.DeleteAsync(System.Int64)">
            <summary>
            Deletes a collect with the given Id.
            </summary>
            <param name="collectId">The product object's Id.</param>
        </member>
        <member name="T:ShopifySharp.ShopifyCustomCollectionService">
            <summary>
            A service for manipulating mapping between custom collections and collections
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifyCustomCollectionService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ShopifyCustomCollectionService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyCustomCollectionService.ListAsync(ShopifySharp.Filters.ShopifyCustomCollectionFilter)">
            <summary>
            default: 50
            Gets a list of up to 250 custom collections for the corresponding productId
            </summary>
            <param name="filter">The <see cref="T:ShopifySharp.ShopifyCustomCollection"/>. used to filter results</param>
            <returns></returns>
        </member>
        <member name="M:ShopifySharp.ShopifyCustomCollectionService.CreateAsync(ShopifySharp.ShopifyCustomCollection)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.ShopifyCustomCollection"/> Custom Collection
            </summary>
            <param name="customCollection">A new <see cref="T:ShopifySharp.ShopifyCustomCollection"/>. Id should be set to null.</param>
            <returns>The new <see cref="T:ShopifySharp.ShopifyCustomCollection"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyCustomCollectionService.CountAsync(ShopifySharp.Filters.ShopifyCustomCollectionFilter)">
            <summary>
            Gets a count of all of the custom collections
            </summary>
            <returns>The count of all collects for the shop.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyCustomCollectionService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.ShopifyCustomCollection"/> with the given id.
            </summary>
            <param name="customCollectionId">The id of the custom collection to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.ShopifyCustomCollection"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyCustomCollectionService.DeleteAsync(System.Int64)">
            <summary>
            Deletes a custom collection with the given Id.
            </summary>
            <param name="customCollectionId">The custom collection's Id.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyCustomCollectionService.UpdateAsync(ShopifySharp.ShopifyCustomCollection)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.ShopifyCustomCollection"/>. Id must not be null.
            </summary>
            <param name="customCollection">The <see cref="T:ShopifySharp.ShopifyCustomCollection"/> to update.</param>
            <returns>The updated <see cref="T:ShopifySharp.ShopifyCustomCollection"/>.</returns>
        </member>
        <member name="T:ShopifySharp.ShopifyCustomerUpdateOptions">
            <summary>
            Options for updating a <see cref="T:ShopifySharp.ShopifyCustomer"/>. 
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomerUpdateOptions.Password">
            <summary>
            An optional password for the user. Default is null.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomerUpdateOptions.PasswordConfirmation">
            <summary>
            Should be set and match <see cref="P:ShopifySharp.ShopifyCustomerUpdateOptions.Password"/>. Default is null.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyDiscountService">
            <summary>
            A service for manipulating Shopify discounts.
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifyDiscountService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ShopifyDiscountService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyDiscountService.ListAsync">
            <summary>
            Gets a list of up to 250 of the shop's discounts.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ShopifySharp.ShopifyDiscountService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.ShopifyDiscount"/> with the given id.
            </summary>
            <param name="discountId">The id of the discount to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.ShopifyDiscount"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyDiscountService.CreateAsync(ShopifySharp.ShopifyDiscount)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.ShopifyDiscount"/> on the store.
            </summary>
            <param name="discount">A new <see cref="T:ShopifySharp.ShopifyDiscount"/>. Id should be set to null.</param>
            <returns>The new <see cref="T:ShopifySharp.ShopifyDiscount"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyDiscountService.EnableAsync(System.Int64)">
            <summary>
            Enables the <see cref="T:ShopifySharp.ShopifyDiscount"/> with the Id specified.
            </summary>
            <param name="discountId">The Id of the <see cref="T:ShopifySharp.ShopifyDiscount"/> to be enabled.</param>
            <returns>The updated <see cref="T:ShopifySharp.ShopifyDiscount"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyDiscountService.DisableAsync(System.Int64)">
            <summary>
            Disables the <see cref="T:ShopifySharp.ShopifyDiscount"/> with the Id specified.
            </summary>
            <param name="discountId">The Id of the <see cref="T:ShopifySharp.ShopifyDiscount"/> to be disabled.</param>
            <returns>The updated <see cref="T:ShopifySharp.ShopifyDiscount"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyDiscountService.DeleteAsync(System.Int64)">
            <summary>
            Removes the discount with the specified Id.
            </summary>
            <param name="discountId">The discount object's Id.</param>
        </member>
        <member name="T:ShopifySharp.ShopifyEventService">
            <summary>
            A service for getting Shopify Events
            Reference: https://help.shopify.com/api/reference/event
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifyEventService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ShopifyEventService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyEventService.CountAsync(ShopifySharp.Filters.ShopifyCountFilter)">
            <summary>
            Gets a count of all site events.
            </summary>
            <param name="filter">Supports CreatedAtMin and CreatedAtMax Properties</param>
            <returns>The count of all site events.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyEventService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.ShopifyEvent"/> with the given id.
            </summary>
            <param name="eventId">The id of the event to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.ShopifyEvent"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyEventService.ListAsync(System.Int64,System.String,ShopifySharp.Filters.ShopifyEventListFilter)">
            <summary>
            Returns a list of events for the given subject and subject type. A full list of supported subject types can be found at https://help.shopify.com/api/reference/event
            </summary>
            <param name="options">Options for filtering the result.</param>
            <param name="subjectId">Restricts results to just one subject item, e.g. all changes on a product.</param>
            <param name="subjectType">The subject's type, e.g. 'Order' or 'Product'. Known subject types are 'Articles', 'Blogs', 'Custom_Collections', 'Comments', 'Orders', 'Pages', 'Products' and 'Smart_Collections'.  A current list of subject types can be found at https://help.shopify.com/api/reference/event </param>
        </member>
        <member name="M:ShopifySharp.ShopifyEventService.ListAsync(ShopifySharp.Filters.ShopifyEventListFilter)">
            <summary>
            Returns a list of events.
            </summary>
            <param name="options">Options for filtering the result.</param>
        </member>
        <member name="T:ShopifySharp.ShopifyFulfillmentService">
            <summary>
            A service for manipulating Shopify fulfillments.
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifyFulfillmentService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ShopifyFulfillmentService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyFulfillmentService.CountAsync(System.Int64,ShopifySharp.Filters.ShopifyCountFilter)">
            <summary>
            Gets a count of all of the shop's fulfillments.
            </summary>
            <param name="orderId">The order id to which the fulfillments belong.</param>
            <param name="filter">Options for filtering the count.</param>
            <returns>The count of all fulfillments for the shop.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyFulfillmentService.ListAsync(System.Int64,ShopifySharp.Filters.ShopifyListFilter)">
            <summary>
            Gets a list of up to 250 of the shop's fulfillments.
            </summary>
            <param name="orderId">The order id to which the fulfillments belong.</param>
            <param name="options">Options for filtering the list.</param>
            <returns>The list of fulfillments matching the filter.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyFulfillmentService.GetAsync(System.Int64,System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.ShopifyFulfillment"/> with the given id.
            </summary>
            <param name="orderId">The order id to which the fulfillments belong.</param>
            <param name="fulfillmentId">The id of the Fulfillment to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.ShopifyFulfillment"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyFulfillmentService.CreateAsync(System.Int64,ShopifySharp.ShopifyFulfillment,System.Boolean)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.ShopifyFulfillment"/> on the store.
            </summary>
            <param name="orderId">The order id to which the fulfillments belong.</param>
            <param name="fulfillment">A new <see cref="T:ShopifySharp.ShopifyFulfillment"/>. Id should be set to null.</param>
            <param name="notifyCustomer">Whether the customer should be notified that the fulfillment 
            has been created.</param>
            <returns>The new <see cref="T:ShopifySharp.ShopifyFulfillment"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyFulfillmentService.UpdateAsync(System.Int64,ShopifySharp.ShopifyFulfillment)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.ShopifyFulfillment"/>. Id must not be null.
            </summary>
            <param name="orderId">The order id to which the fulfillments belong.</param>
            <param name="fulfillment">The <see cref="T:ShopifySharp.ShopifyFulfillment"/> to update.</param>
            <returns>The updated <see cref="T:ShopifySharp.ShopifyFulfillment"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyFulfillmentService.CompleteAsync(System.Int64,System.Int64)">
            <summary>
            Completes a pending fulfillment with the given id.
            </summary>
            <param name="orderId">The order id to which the fulfillments belong.</param>
            <param name="fulfillmentId">The fulfillment's id.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyFulfillmentService.CancelAsync(System.Int64,System.Int64)">
            <summary>
            Cancels a pending fulfillment with the given id.
            </summary>
            <param name="orderId">The order id to which the fulfillments belong.</param>
            <param name="fulfillmentId">The fulfillment's id.</param>
        </member>
        <member name="T:ShopifySharp.ShopifyMetaFieldService">
            <summary>
            A service for manipulating Shopify metafields.
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifyMetaFieldService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ShopifyMetaFieldService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyMetaFieldService.CountAsync(System.Nullable{System.Int64},System.String,ShopifySharp.Filters.ShopifyMetaFieldFilter)">
            <summary>
            Gets a count of the metafields for the given entity type and filter options. Leave both resourceType and resourceId null for shop metafields.
            </summary>
            <param name="resourceType">The type of shopify resource to obtain metafields for. This could be variants, products, orders, customers, custom_collections.</param>
            <param name="resourceId">The Id for the resource type.</param>
            <param name="filter">The <see cref="T:ShopifySharp.Filters.ShopifyMetaFieldFilter"/> used to filter results</param>
            <returns>The count of all metafields for the given entity and filter options.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyMetaFieldService.ListAsync(System.Nullable{System.Int64},System.String,ShopifySharp.Filters.ShopifyMetaFieldFilter)">
            <summary>
            Gets a list of the metafields for a specified resource. Leave both resourceType and resourceId null for shop metafields.
            </summary>
            <param name="resourceType">The type of shopify resource to obtain metafields for. This could be variants, products, orders, customers, custom_collections.</param>
            <param name="resourceId">The Id for the resource type.</param>
            <param name="options">The <see cref="T:ShopifySharp.Filters.ShopifyMetaFieldFilter"/> used to filter results</param>
            <returns></returns>
        </member>
        <member name="M:ShopifySharp.ShopifyMetaFieldService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.ShopifyMetaField"/> with the given id.
            </summary>
            <param name="metafieldId">The id of the metafield to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.ShopifyMetaField"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyMetaFieldService.CreateAsync(ShopifySharp.ShopifyMetaField,System.Nullable{System.Int64},System.String)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.ShopifyMetaField"/> associated with the provided resource and resource id. Leave both resourceType and resourceId null for shop metafields.
            </summary>
            <param name="metafield">A new <see cref="T:ShopifySharp.ShopifyMetaField"/>. Id should be set to null.</param>
            <param name="resourceId">The Id of the resource the metafield will be associated with. This can be variants, products, orders, customers, custom_collections, etc.</param>
            <param name="resourceType">The resource type the metaifeld will be associated with. This can be variants, products, orders, customers, custom_collections, etc.</param>
            <returns>The new <see cref="T:ShopifySharp.ShopifyMetaField"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyMetaFieldService.UpdateAsync(ShopifySharp.ShopifyMetaField)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.ShopifyMetaField"/>. Id must not be null.
            </summary>
            <param name="metafield">The <see cref="T:ShopifySharp.ShopifyMetaField"/> to update.</param>
            <returns>The updated <see cref="T:ShopifySharp.ShopifyMetaField"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyMetaFieldService.DeleteAsync(System.Int64)">
            <summary>
            Deletes a metafield with the given Id.
            </summary>
            <param name="metafieldId">The metafield object's Id.</param>
        </member>
        <member name="T:ShopifySharp.ShopifyOrderRiskService">
            <summary>
            A service for manipulating Shopify order risks.
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifyOrderRiskService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ShopifyOrderRiskService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyOrderRiskService.ListAsync(System.Int64)">
            <summary>
            Gets a list of all order risks for an order.
            </summary>
            <param name="orderId">The order the risks belong to.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyOrderRiskService.GetAsync(System.Int64,System.Int64)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.ShopifyOrderRisk"/> with the given id.
            </summary>
            <param name="orderId">The order the risk belongs to.</param>
            <param name="riskId">The id of the risk to retrieve.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyOrderRiskService.CreateAsync(System.Int64,ShopifySharp.ShopifyOrderRisk)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.ShopifyOrderRisk"/> on the order.
            </summary>
            <param name="orderId">The order the risk belongs to.</param>
            <param name="risk">A new <see cref="T:ShopifySharp.ShopifyOrderRisk"/>. Id should be set to null.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyOrderRiskService.UpdateAsync(System.Int64,ShopifySharp.ShopifyOrderRisk)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.ShopifyOrderRisk"/>. Id must not be null.
            </summary>
            <param name="orderId">The order the risk belongs to.</param>
            <param name="risk">The risk to update.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyOrderRiskService.DeleteAsync(System.Int64,System.Int64)">
            <summary>
            Deletes an order with the given Id.
            </summary>
            <param name="orderId">The order the risk belongs to.</param>
            <param name="riskId">The risk's id.</param>
        </member>
        <member name="P:ShopifySharp.ShopifyOrderCancelOptions.RefundAmount">
            <summary>
            Amount to refund (decimal ex: 21.20).
            If set, Shopify will attempt to void/refund the payment depending on the status.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrderCancelOptions.Restock">
            <summary>
            Restock the items for this order back to your store.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrderCancelOptions.Reason">
            <summary>
            The reason for the order cancellation
            Must be: customer, inventory, fraud or other.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyOrderCancelOptions.SendCancellationReceipt">
            <summary>
            Send an email to the customer notifying them of the cancellation.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyPageService">
            <summary>
            A service for manipulating Shopify pages.
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifyPageService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ShopifyPageService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyPageService.CountAsync(ShopifySharp.Filters.ShopifyPageFilter)">
            <summary>
            Gets a count of all of the shop's pages.
            </summary>
            <returns>The count of all pages for the shop.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyPageService.ListAsync(ShopifySharp.Filters.ShopifyPageFilter)">
            <summary>
            Gets a list of up to 250 of the shop's pages.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ShopifySharp.ShopifyPageService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.ShopifyPage"/> with the given id.
            </summary>
            <param name="pageId">The id of the page to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.ShopifyPage"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyPageService.CreateAsync(ShopifySharp.ShopifyPage,ShopifySharp.ShopifyPageCreateOptions)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.ShopifyPage"/> on the store.
            </summary>
            <param name="page">A new <see cref="T:ShopifySharp.ShopifyPage"/>. Id should be set to null.</param>
            <param name="options">Options for creating the page.</param>
            <returns>The new <see cref="T:ShopifySharp.ShopifyPage"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyPageService.UpdateAsync(ShopifySharp.ShopifyPage)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.ShopifyPage"/>. Id must not be null.
            </summary>
            <param name="page">The <see cref="T:ShopifySharp.ShopifyPage"/> to update.</param>
            <returns>The updated <see cref="T:ShopifySharp.ShopifyPage"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyPageService.DeleteAsync(System.Int64)">
            <summary>
            Deletes a page with the given Id.
            </summary>
            <param name="pageId">The page object's Id.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyPageService.UpdateMetafieldAsync(System.Int64,ShopifySharp.ShopifyMetaField)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.ShopifyPage"/>. Id must not be null.
            </summary>
            <param name="pageId">The <see cref="T:ShopifySharp.ShopifyPage"/> pageId to update.</param>
            <param name="metafield">The <see cref="T:ShopifySharp.ShopifyMetaField"/> to update.</param>
            <returns>The updated <see cref="T:ShopifySharp.ShopifyMetaField"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyPageService.GetMetaFieldsAsync(System.Int64)">
            <summary>
            Retrieves the collection of <see cref="T:ShopifySharp.ShopifyMetaField"/> for the given page id.
            </summary>
            <param name="pageId">The id of the page to retrieve.</param>
            <returns>The <see cref="T:ShopifySharp.ShopifyPage"/>.</returns>
        </member>
        <member name="T:ShopifySharp.ShopifyProductImageService">
            <summary>
            A service for manipulating Shopify ProductImages.
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifyProductImageService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ShopifyProductImageService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyProductImageService.CountAsync(System.Int64,ShopifySharp.Filters.ShopifyPublishableCountFilter)">
            <summary>
            Gets a count of all of the shop's ProductImages.
            </summary>
            <param name="productId">The id of the product that counted images belong to.</param>
            <param name="filter">An optional filter that restricts the results.</param>
            <returns>The count of all ProductImages for the shop.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyProductImageService.ListAsync(System.Int64,System.Nullable{System.Int64},System.String)">
            <summary>
            Gets a list of up to 250 of the shop's ProductImages.
            </summary>
            <param name="productId">The id of the product that counted images belong to.</param>
            <param name="fields">
            An optional, comma-separated list of fields to include in the response.
            </param>
            <param name="sinceId">
            Restricts results to after the specified id.
            </param>
            <returns>The list of <see cref="T:ShopifySharp.ShopifyProductImage"/>.</returns>
            <remarks>
            Unlike most list commands, this one only accepts the since_id and fields filters.
            </remarks>
        </member>
        <member name="M:ShopifySharp.ShopifyProductImageService.GetAsync(System.Int64,System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.ShopifyProductImage"/> with the given id.
            </summary>
            <param name="productId">The id of the product that counted images belong to.</param>
            <param name="imageId">The id of the ProductImage to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.ShopifyProductImage"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyProductImageService.CreateAsync(System.Int64,ShopifySharp.ShopifyProductImage)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.ShopifyProductImage"/>. If the new image has an <see cref="P:ShopifySharp.ShopifyProductImage.Attachment"/> string, it will be converted to the <see cref="P:ShopifySharp.ShopifyProductImage.Src"/>.
            </summary>
            <param name="productId">The id of the product that counted images belong to.</param>
            <param name="image">The new <see cref="T:ShopifySharp.ShopifyProductImage"/>.</param>
            <returns>The new <see cref="T:ShopifySharp.ShopifyProductImage"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyProductImageService.UpdateAsync(System.Int64,ShopifySharp.ShopifyProductImage)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.ShopifyProductImage"/>. Id must not be null.
            </summary>
            <param name="productId">The id of the product that counted images belong to.</param>
            <param name="image">The <see cref="T:ShopifySharp.ShopifyProductImage"/> to update.</param>
            <returns>The updated <see cref="T:ShopifySharp.ShopifyProductImage"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyProductImageService.DeleteAsync(System.Int64,System.Int64)">
            <summary>
            Deletes a ProductImage with the given Id.
            </summary>
            <param name="productId">The id of the product that counted images belong to.</param>
            <param name="imageId">The ProductImage object's Id.</param>
        </member>
        <member name="T:ShopifySharp.ShopifyProductVariantService">
            <summary>
            A service for manipulating a Shopify product's variants.
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifyProductVariantService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ShopifyProductVariantService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyProductVariantService.CountAsync(System.Int64)">
            <summary>
            Gets a count of all variants belonging to the given product.
            </summary>
            <param name="productId">The product that the variants belong to.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyProductVariantService.ListAsync(System.Int64,ShopifySharp.Filters.ShopifyListFilter)">
            <summary>
            Gets a list of variants belonging to the given product.
            </summary>
            <param name="productId">The product that the variants belong to.</param>
            <param name="filterOptions">Options for filtering the result.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyProductVariantService.GetAsync(System.Int64)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.ShopifyProductVariant"/> with the given id.
            </summary>
            <param name="variantId">The id of the product variant to retrieve.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyProductVariantService.CreateAsync(System.Int64,ShopifySharp.ShopifyProductVariant)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.ShopifyProductVariant"/>.
            </summary>
            <param name="productId">The product that the new variant will belong to.</param>
            <param name="variant">A new <see cref="T:ShopifySharp.ShopifyProductVariant"/>. Id should be set to null.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyProductVariantService.UpdateAsync(ShopifySharp.ShopifyProductVariant)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.ShopifyProductVariant"/>. Id must not be null.
            </summary>
            <param name="variant">The variant to update.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyProductVariantService.DeleteAsync(System.Int64,System.Int64)">
            <summary>
            Deletes a product variant with the given Id.
            </summary>
            <param name="productId">The product that the variant belongs to.</param>
            <param name="variantId">The product variant's id.</param>
        </member>
        <member name="T:ShopifySharp.ShopifyProductService">
            <summary>
            A service for manipulating Shopify products.
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifyProductService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ShopifyProductService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyProductService.CountAsync(ShopifySharp.Filters.ShopifyProductFilter)">
            <summary>
            Gets a count of all of the shop's products.
            </summary>
            <returns>The count of all products for the shop.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyProductService.ListAsync(ShopifySharp.Filters.ShopifyProductFilter)">
            <summary>
            Gets a list of up to 250 of the shop's products.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ShopifySharp.ShopifyProductService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.ShopifyProduct"/> with the given id.
            </summary>
            <param name="productId">The id of the product to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.ShopifyProduct"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyProductService.CreateAsync(ShopifySharp.ShopifyProduct,ShopifySharp.ShopifyProductCreateOptions)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.ShopifyProduct"/> on the store.
            </summary>
            <param name="product">A new <see cref="T:ShopifySharp.ShopifyProduct"/>. Id should be set to null.</param>
            <param name="options">Options for creating the product.</param>
            <returns>The new <see cref="T:ShopifySharp.ShopifyProduct"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyProductService.UpdateAsync(ShopifySharp.ShopifyProduct)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.ShopifyProduct"/>. Id must not be null.
            </summary>
            <param name="product">The <see cref="T:ShopifySharp.ShopifyProduct"/> to update.</param>
            <returns>The updated <see cref="T:ShopifySharp.ShopifyProduct"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyProductService.DeleteAsync(System.Int64)">
            <summary>
            Deletes a product with the given Id.
            </summary>
            <param name="productId">The product object's Id.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyProductService.PublishAsync(System.Int64)">
            <summary>
            Publishes an unpublished <see cref="T:ShopifySharp.ShopifyProduct"/>.
            </summary>
            <param name="id">The product's id.</param>
            <returns>The published <see cref="T:ShopifySharp.ShopifyProduct"/></returns>
        </member>
        <member name="M:ShopifySharp.ShopifyProductService.UnpublishAsync(System.Int64)">
            <summary>
            Unpublishes an published <see cref="T:ShopifySharp.ShopifyProduct"/>.
            </summary>
            <param name="id">The product's id.</param>
            <returns>The unpublished <see cref="T:ShopifySharp.ShopifyProduct"/></returns>
        </member>
        <member name="T:ShopifySharp.ShopifyRecurringChargeService">
            <summary>
            A service for manipulating Shopify's RecurringApplicationCharge API.
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifyRecurringChargeService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ShopifyRecurringChargeService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyRecurringChargeService.CreateAsync(ShopifySharp.ShopifyRecurringCharge)">
            <summary>
            Creates a <see cref="T:ShopifySharp.ShopifyRecurringCharge"/>. 
            </summary>
            <param name="charge">The <see cref="T:ShopifySharp.ShopifyRecurringCharge"/> to create.</param>
            <returns>The new <see cref="T:ShopifySharp.ShopifyRecurringCharge"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyRecurringChargeService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.ShopifyRecurringCharge"/> with the given id.
            </summary>
            <param name="id">The id of the charge to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.ShopifyRecurringCharge"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyRecurringChargeService.ListAsync(System.Nullable{System.Int64},System.String)">
            <summary>
            Retrieves a list of all past and present <see cref="T:ShopifySharp.ShopifyRecurringCharge"/> objects.
            </summary>
            <param name="sinceId">Restricts results to any charge after the given id.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The list of <see cref="T:ShopifySharp.ShopifyRecurringCharge"/> objects.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyRecurringChargeService.ActivateAsync(System.Int64)">
            <summary>
            Activates a <see cref="T:ShopifySharp.ShopifyRecurringCharge"/> that the shop owner has accepted.
            </summary>
            <param name="id">The id of the charge to activate.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyRecurringChargeService.DeleteAsync(System.Int64)">
            <summary>
            Deletes a <see cref="T:ShopifySharp.ShopifyRecurringCharge"/>.
            </summary>
            <param name="id">The id of the charge to delete.</param>
        </member>
        <member name="T:ShopifySharp.ShopifyCustomerCreateOptions">
            <summary>
            Options for creating a <see cref="T:ShopifySharp.ShopifyCustomer"/>.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomerCreateOptions.SendEmailInvite">
            <summary>
            Whether an email invite should be sent to the new customer. Default is null.
            </summary>
        </member>
        <member name="P:ShopifySharp.ShopifyCustomerCreateOptions.SendWelcomeEmail">
            <summary>
            Whether a welcome email should be sent to the new customer. Default is null.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyCustomerService">
            <summary>
            A service for manipulating Shopify customers.
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifyCustomerService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ShopifyCustomerService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyCustomerService.CountAsync">
            <summary>
            Gets a count of all of the shop's customers.
            </summary>
            <returns>The count of all customers for the shop.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyCustomerService.ListAsync(ShopifySharp.Filters.ShopifyListFilter)">
            <summary>
            Gets a list of up to 250 of the shop's customers.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ShopifySharp.ShopifyCustomerService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.ShopifyCustomer"/> with the given id.
            </summary>
            <param name="customerId">The id of the customer to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.ShopifyCustomer"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyCustomerService.SearchAsync(System.String,System.String,ShopifySharp.Filters.ShopifyListFilter)">
            <summary>
            Searches through a shop's customers for the given search query. 
            </summary>
            <param name="query">The search query, in format of 'Bob country:United States', which would search for customers in the United States with a name like 'Bob'.</param>
            <param name="order">An optional string to order the results, in format of 'field_name DESC'. Default is 'last_order_date DESC'.</param>
            <param name="filter">Options for filtering the results.</param>
            <returns>A list of matching customers.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyCustomerService.CreateAsync(ShopifySharp.ShopifyCustomer,ShopifySharp.ShopifyCustomerCreateOptions)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.ShopifyCustomer"/> on the store.
            </summary>
            <param name="customer">A new <see cref="T:ShopifySharp.ShopifyCustomer"/>. Id should be set to null.</param>
            <param name="options">Options for creating the customer.</param>
            <returns>The new <see cref="T:ShopifySharp.ShopifyCustomer"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyCustomerService.UpdateAsync(ShopifySharp.ShopifyCustomer,ShopifySharp.ShopifyCustomerUpdateOptions)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.ShopifyCustomer"/>. Id must not be null.
            </summary>
            <param name="customer">The <see cref="T:ShopifySharp.ShopifyCustomer"/> to update.</param>
            <param name="options">Options for updating the customer.</param>
            <returns>The updated <see cref="T:ShopifySharp.ShopifyCustomer"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyCustomerService.DeleteAsync(System.Int64)">
            <summary>
            Deletes a customer with the given Id.
            </summary>
            <param name="customerId">The customer object's Id.</param>
        </member>
        <member name="P:ShopifySharp.ShopifyOrderCreateOptions.InventoryBehavior">
            <summary>
            The inventory behavior for the order. Known values are 'bypass', 'decrement_ignoring_policy' and 'decrement_obeying_policy'.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyOrderService">
            <summary>
            A service for manipulating Shopify orders.
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifyOrderService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ShopifyOrderService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyOrderService.CountAsync(ShopifySharp.Filters.ShopifyOrderFilter)">
            <summary>
            Gets a count of all of the shop's orders.
            </summary>
            <param name="filter">Options for filtering the count.</param>
            <returns>The count of all orders for the shop.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyOrderService.ListAsync(ShopifySharp.Filters.ShopifyOrderFilter)">
            <summary>
            Gets a list of up to 250 of the shop's orders.
            </summary>
            <param name="options">Options for filtering the list.</param>
            <returns>The list of orders matching the filter.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyOrderService.ListForCustomerAsync(System.Int64,ShopifySharp.Filters.ShopifyOrderFilter)">
            <summary>
            Gets a list of up to 250 of the customer's orders.
            </summary>
            <param name="customerId">The id of the customer to list orders for.</param>
            <param name="options">Options for filtering the list.</param>
            <returns>The list of orders matching the filter.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyOrderService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.ShopifyOrder"/> with the given id.
            </summary>
            <param name="orderId">The id of the order to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.ShopifyOrder"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyOrderService.CloseAsync(System.Int64)">
            <summary>
            Closes an order.
            </summary>
            <param name="id">The order's id.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyOrderService.OpenAsync(System.Int64)">
            <summary>
            Opens a closed order.
            </summary>
            <param name="id">The order's id.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyOrderService.CreateAsync(ShopifySharp.ShopifyOrder,ShopifySharp.ShopifyOrderCreateOptions)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.ShopifyOrder"/> on the store.
            </summary>
            <param name="order">A new <see cref="T:ShopifySharp.ShopifyOrder"/>. Id should be set to null.</param>
            <param name="options">Options for creating the order.</param>
            <returns>The new <see cref="T:ShopifySharp.ShopifyOrder"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyOrderService.UpdateAsync(ShopifySharp.ShopifyOrder)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.ShopifyOrder"/>. Id must not be null.
            </summary>
            <param name="order">The <see cref="T:ShopifySharp.ShopifyOrder"/> to update.</param>
            <returns>The updated <see cref="T:ShopifySharp.ShopifyOrder"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyOrderService.DeleteAsync(System.Int64)">
            <summary>
            Deletes an order with the given Id.
            </summary>
            <param name="orderId">The order object's Id.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyOrderService.CancelAsync(System.Int64,ShopifySharp.ShopifyOrderCancelOptions)">
            <summary>
            Cancels an order.
            </summary>
            <param name="orderId">The order's id.</param>
            <returns>The cancelled <see cref="T:ShopifySharp.ShopifyOrder"/>.</returns>
        </member>
        <member name="T:ShopifySharp.ShopifyScriptTagService">
            <summary>
            A service for manipulating Shopify's ScriptTag API.
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifyScriptTagService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ShopifyScriptTagService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyScriptTagService.CountAsync(System.String)">
            <summary>
            Gets a count of all of the shop's <see cref="T:ShopifySharp.ShopifyScriptTag"/>s.
            </summary>
            <param name="src">Optionally filters the count to only those <see cref="T:ShopifySharp.ShopifyScriptTag"/>s with the 
            given <see cref="P:ShopifySharp.ShopifyScriptTag.Src"/> value.</param>
            <returns>The count.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyScriptTagService.ListAsync(ShopifySharp.Filters.ShopifyScriptTagFilter)">
            <summary>
            Gets a list of up to 250 of the shop's <see cref="T:ShopifySharp.ShopifyScriptTag"/>s.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ShopifySharp.ShopifyScriptTagService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.ShopifyScriptTag"/> with the given id.
            </summary>
            <param name="tagId">The id of the <see cref="T:ShopifySharp.ShopifyScriptTag"/> to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.ShopifyScriptTag"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyScriptTagService.CreateAsync(ShopifySharp.ShopifyScriptTag)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.ShopifyScriptTag"/> on the store.
            </summary>
            <param name="tag">A new <see cref="T:ShopifySharp.ShopifyScriptTag"/>. Id should be set to null.</param>
            <returns>The new <see cref="T:ShopifySharp.ShopifyScriptTag"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyScriptTagService.UpdateAsync(ShopifySharp.ShopifyScriptTag)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.ShopifyScriptTag"/>. Id must not be null.
            </summary>
            <param name="tag">The <see cref="T:ShopifySharp.ShopifyScriptTag"/> to update.</param>
            <returns>The updated <see cref="T:ShopifySharp.ShopifyScriptTag"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyScriptTagService.DeleteAsync(System.Int64)">
            <summary>
            Deletes the <see cref="T:ShopifySharp.ShopifyScriptTag"/> with the given Id.
            </summary>
            <param name="tagId">The tag's Id.</param>
        </member>
        <member name="T:ShopifySharp.ShopifyRedirectService">
            <summary>
            A service for manipulating Shopify redirects.
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifyRedirectService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ShopifyRedirectService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyRedirectService.CountAsync(System.String,System.String)">
            <summary>
            Gets a count of all of the shop's redirects.
            </summary>
            <param name="path">An optional parameter that filters the result to redirects with the given path.</param>
            <param name="target">An optional parameter that filters the result to redirects with the given target.</param>
            <returns>The count of all redirects for the shop.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyRedirectService.ListAsync(ShopifySharp.Filters.ShopifyRedirectFilter)">
            <summary>
            Gets a list of up to 250 of the shop's redirects.
            </summary>
            <param name="filter">An optional filter that restricts the results.</param>
            <returns>The list of <see cref="T:ShopifySharp.ShopifyRedirect"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyRedirectService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.ShopifyRedirect"/> with the given id.
            </summary>
            <param name="redirectId">The id of the redirect to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.ShopifyRedirect"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyRedirectService.CreateAsync(ShopifySharp.ShopifyRedirect)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.ShopifyRedirect"/> on the store. The redirect always starts out with a role of 
            "unpublished." If the redirect has a different role, it will be assigned that only after all of its 
            files have been extracted and stored by Shopify (which might take a couple of minutes). 
            </summary>
            <param name="redirect">The new <see cref="T:ShopifySharp.ShopifyRedirect"/>.</param>
            <returns>The new <see cref="T:ShopifySharp.ShopifyRedirect"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyRedirectService.UpdateAsync(ShopifySharp.ShopifyRedirect)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.ShopifyRedirect"/>. Id must not be null.
            </summary>
            <param name="redirect">The <see cref="T:ShopifySharp.ShopifyRedirect"/> to update.</param>
            <returns>The updated <see cref="T:ShopifySharp.ShopifyRedirect"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyRedirectService.DeleteAsync(System.Int64)">
            <summary>
            Deletes a redirect with the given Id.
            </summary>
            <param name="redirectId">The redirect object's Id.</param>
        </member>
        <member name="T:ShopifySharp.ShopifyLocationService">
            <summary>
            A service for manipulating Shopify's Location API.
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifyLocationService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ShopifyLocationService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyLocationService.GetAsync(System.Int64)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.ShopifyLocation"/> with the given id.
            </summary>
            <param name="id">The id of the charge to retrieve.</param>
            <returns>The <see cref="T:ShopifySharp.ShopifyLocation"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyLocationService.ListAsync">
            <summary>
            Retrieves a list of all <see cref="T:ShopifySharp.ShopifyLocation"/> objects.
            </summary>
            <returns>The list of <see cref="T:ShopifySharp.ShopifyLocation"/> objects.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ShopifyService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyShopService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ShopifyShopService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyShopService.GetAsync">
            <summary>
            Returns the shop's <see cref="T:ShopifySharp.ShopifyShop"/> information.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ShopifySharp.ShopifyShopService.UninstallAppAsync">
            <summary>
            Forces the shop to uninstall your Shopify app. Uninstalling an application is an irreversible operation. Be entirely sure that you no longer need to make API calls for the shop in which the application has been installed.
            </summary>
        </member>
        <member name="T:ShopifySharp.ShopifyChargeService">
            <summary>
            A service for manipulating Shopify's ApplicationCharge API.
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifyChargeService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ShopifyChargeService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyChargeService.CreateAsync(ShopifySharp.ShopifyCharge)">
            <summary>
            Creates a <see cref="T:ShopifySharp.ShopifyCharge"/>. 
            </summary>
            <param name="charge">The <see cref="T:ShopifySharp.ShopifyCharge"/> to create.</param>
            <returns>The new <see cref="T:ShopifySharp.ShopifyCharge"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyChargeService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.ShopifyCharge"/> with the given id.
            </summary>
            <param name="id">The id of the charge to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.ShopifyCharge"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyChargeService.ListAsync(System.Nullable{System.Int64},System.String)">
            <summary>
            Retrieves a list of all past and present <see cref="T:ShopifySharp.ShopifyCharge"/> objects.
            </summary>
            <param name="sinceId">Restricts results to any charge after the given id.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The list of <see cref="T:ShopifySharp.ShopifyCharge"/> objects.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyChargeService.ActivateAsync(System.Int64)">
            <summary>
            Activates a <see cref="T:ShopifySharp.ShopifyCharge"/> that the shop owner has accepted.
            </summary>
            <param name="id">The id of the charge to activate.</param>
        </member>
        <member name="T:ShopifySharp.ShopifySmartCollectionService">
            <summary>
            A service for manipulating Shopify's smart collections.
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifySmartCollectionService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ShopifySmartCollectionService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ShopifySmartCollectionService.CountAsync(ShopifySharp.Filters.ShopifySmartCollectionFilter)">
            <summary>
            Gets a count of all smart collections on the store.
            </summary>
            <param name="filterOptions">Options for filtering the count.</param>
        </member>
        <member name="M:ShopifySharp.ShopifySmartCollectionService.ListAsync(ShopifySharp.Filters.ShopifySmartCollectionFilter)">
            <summary>
            Gets a list of up to 250 smart collections.
            </summary>
            <param name="filterOptions">Options for filtering the result.</param>
        </member>
        <member name="M:ShopifySharp.ShopifySmartCollectionService.GetAsync(System.Int64)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.ShopifySmartCollection"/> with the given id.
            </summary>
            <param name="collectionId">The id of the smart collection to retrieve.</param>
        </member>
        <member name="M:ShopifySharp.ShopifySmartCollectionService.CreateAsync(ShopifySharp.ShopifySmartCollection)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.ShopifySmartCollection"/>.
            </summary>
            <param name="collection">A new <see cref="T:ShopifySharp.ShopifySmartCollection"/>. Id should be set to null.</param>
        </member>
        <member name="M:ShopifySharp.ShopifySmartCollectionService.UpdateAsync(ShopifySharp.ShopifySmartCollection)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.ShopifySmartCollection"/>. Id must not be null.
            </summary>
            <param name="collection">The smart collection to update.</param>
        </member>
        <member name="M:ShopifySharp.ShopifySmartCollectionService.DeleteAsync(System.Int64)">
            <summary>
            Deletes a smart collection with the given Id.
            </summary>
            <param name="collectionId">The smart collection's id.</param>
        </member>
        <member name="T:ShopifySharp.ShopifyThemeService">
            <summary>
            A service for manipulating Shopify themes.
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifyThemeService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ShopifyThemeService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyThemeService.ListAsync(ShopifySharp.Filters.ShopifyListFilter)">
            <summary>
            Gets a list of up to 250 of the shop's themes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ShopifySharp.ShopifyThemeService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.ShopifyTheme"/> with the given id.
            </summary>
            <param name="themeId">The id of the theme to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.ShopifyTheme"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyThemeService.CreateAsync(ShopifySharp.ShopifyTheme,System.String)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.ShopifyTheme"/> on the store. The theme always starts out with a role of 
            "unpublished." If the theme has a different role, it will be assigned that only after all of its 
            files have been extracted and stored by Shopify (which might take a couple of minutes). 
            </summary>
            <param name="theme">The new <see cref="T:ShopifySharp.ShopifyTheme"/>.</param>
            <param name="sourceUrl">A URL that points to the .zip file containing the theme's source files.</param>
            <returns>The new <see cref="T:ShopifySharp.ShopifyTheme"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyThemeService.UpdateAsync(ShopifySharp.ShopifyTheme)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.ShopifyTheme"/>. Id must not be null.
            </summary>
            <param name="theme">The <see cref="T:ShopifySharp.ShopifyTheme"/> to update.</param>
            <returns>The updated <see cref="T:ShopifySharp.ShopifyTheme"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyThemeService.DeleteAsync(System.Int64)">
            <summary>
            Deletes a Theme with the given Id.
            </summary>
            <param name="themeId">The Theme object's Id.</param>
        </member>
        <member name="T:ShopifySharp.ShopifyTransactionService">
            <summary>
            A service for manipulating Shopify transactions.
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifyTransactionService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ShopifyTransactionService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyTransactionService.CountAsync(System.Int64)">
            <summary>
            Gets a count of all of the shop's transactions.
            </summary>
            <param name="orderId">The order id to which the fulfillments belong.</param>
            <returns>The count of all fulfillments for the shop.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyTransactionService.ListAsync(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Gets a list of up to 250 of the shop's transactions.
            </summary>
            <param name="orderId">The order id to which the fulfillments belong.</param>
            <param name="sinceId">Filters the results to after the specified id.</param>
            <returns>The list of transactions.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyTransactionService.GetAsync(System.Int64,System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.ShopifyTransaction"/> with the given id.
            </summary>
            <param name="orderId">The order id to which the fulfillments belong.</param>
            <param name="transactionId">The id of the Transaction to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.ShopifyTransaction"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyTransactionService.CreateAsync(System.Int64,ShopifySharp.ShopifyTransaction)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.ShopifyTransaction"/> of the given kind.
            </summary>
            <param name="orderId">The order id to which the fulfillments belong.</param>
            <param name="transaction">The transaction.</param>
            <returns>The new <see cref="T:ShopifySharp.ShopifyTransaction"/>.</returns>
        </member>
        <member name="T:ShopifySharp.ShopifyUsageChargeService">
            <summary>
            A service for manipulating Shopify's UsageCharge API.
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifyUsageChargeService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ShopifyUsageChargeService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyUsageChargeService.CreateAsync(System.Int64,System.String,System.Double)">
            <summary>
            Creates a <see cref="T:ShopifySharp.ShopifyUsageCharge"/>. 
            </summary>
            <param name="recurringChargeId">The id of the <see cref="T:ShopifySharp.ShopifyUsageCharge"/> that this usage charge belongs to.</param>
            <param name="description">The name or description of the usage charge.</param>
            <param name="price">The price of the usage charge.</param>
            <returns>The new <see cref="T:ShopifySharp.ShopifyUsageCharge"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyUsageChargeService.GetAsync(System.Int64,System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.ShopifyUsageCharge"/> with the given id.
            </summary>
            <param name="recurringChargeId">The id of the recurring charge that this usage charge belongs to.</param>
            <param name="id">The id of the charge to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.ShopifyUsageCharge"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyUsageChargeService.ListAsync(System.Int64,System.String)">
            <summary>
            Retrieves a list of all past and present <see cref="T:ShopifySharp.ShopifyUsageCharge"/> objects.
            </summary>
            <param name="recurringChargeId">The id of the recurring charge that these usage charges belong to.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The list of <see cref="T:ShopifySharp.ShopifyUsageCharge"/> objects.</returns>
        </member>
        <member name="T:ShopifySharp.ShopifyWebhookService">
            <summary>
            A service for manipulating Shopify webhooks.
            </summary>
        </member>
        <member name="M:ShopifySharp.ShopifyWebhookService.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:ShopifySharp.ShopifyWebhookService" />.
            </summary>
            <param name="myShopifyUrl">The shop's *.myshopify.com URL.</param>
            <param name="shopAccessToken">An API access token for the shop.</param>
        </member>
        <member name="M:ShopifySharp.ShopifyWebhookService.CountAsync(System.String,System.String)">
            <summary>
            Gets a count of all of the shop's webhooks.
            </summary>
            <param name="address">An optional filter for the address property. When used, this method will only count webhooks with the given address.</param>
            <param name="topic">An optional filter for the topic property. When used, this method will only count webhooks with the given topic. A full list of topics can be found at https://help.shopify.com/api/reference/webhook. </param>
            <returns>The count of all webhooks for the shop.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyWebhookService.ListAsync(ShopifySharp.Filters.ShopifyWebhookFilter)">
            <summary>
            Gets a list of up to 250 of the shop's webhooks.
            </summary>
            <param name="filter">Options for filtering the list.</param>
            <returns>The list of webhooks matching the filter.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyWebhookService.GetAsync(System.Int64,System.String)">
            <summary>
            Retrieves the <see cref="T:ShopifySharp.ShopifyWebhook"/> with the given id.
            </summary>
            <param name="webhookId">The id of the webhook to retrieve.</param>
            <param name="fields">A comma-separated list of fields to return.</param>
            <returns>The <see cref="T:ShopifySharp.ShopifyWebhook"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyWebhookService.CreateAsync(ShopifySharp.ShopifyWebhook)">
            <summary>
            Creates a new <see cref="T:ShopifySharp.ShopifyWebhook"/> on the store.
            </summary>
            <param name="webhook">A new <see cref="T:ShopifySharp.ShopifyWebhook"/>. Id should be set to null.</param>
            <returns>The new <see cref="T:ShopifySharp.ShopifyWebhook"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyWebhookService.UpdateAsync(ShopifySharp.ShopifyWebhook)">
            <summary>
            Updates the given <see cref="T:ShopifySharp.ShopifyWebhook"/>. Id must not be null.
            </summary>
            <param name="webhook">The <see cref="T:ShopifySharp.ShopifyWebhook"/> to update.</param>
            <returns>The updated <see cref="T:ShopifySharp.ShopifyWebhook"/>.</returns>
        </member>
        <member name="M:ShopifySharp.ShopifyWebhookService.DeleteAsync(System.Int64)">
            <summary>
            Deletes the webhook with the given Id.
            </summary>
            <param name="webhookId">The order object's Id.</param>
        </member>
    </members>
</doc>
